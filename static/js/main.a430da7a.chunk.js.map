{"version":3,"sources":["assets/heroimage.jpeg","components/Card.js","pages/Home.js","assets/closeButton.svg","components/Notification.js","components/FormFormik.js","components/FormReactFinal.js","components/FormReactHook.js","helpers/UserDBContext.js","helpers/UserContext.js","helpers/FormContext.js","pages/CreateAccount.js","pages/Deposit.js","pages/Withdraw.js","pages/AllData.js","components/AppNav.js","assets/logo.svg","helpers/LanguageContext.js","components/UserLogin.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","header","content","form","className","alt","src","width","Home","heroImg","Notification","title","text","type","handleClick","parsedContent","onClick","e","closeButton","height","style","margin","padding","fontWeight","FormFormik","formFields","formSubmission","buttons","success","failure","idRoot","submitHelper","initialFieldValues","manuallyClosed","useState","submitted","setSubmitted","notification","field","name","formik","useFormik","initialValues","onSubmit","values","accountCreated","buttonArr","filter","x","document","getElementById","innerHTML","altDisplay","value","setTimeout","validate","errors","thisField","validation","item","validationFunction","function","errorMsg","error","id","handleSubmit","map","i","display","autoComplete","onChange","handleChange","buttonEl","Object","every","some","dependency","FormReactFinal","FormReactHook","UserDBContext","createContext","users","UserContext","FormContext","CreateAccount","userDBcontext","useContext","getUserCount","length","formProvider","logIn","valLength","val","emlRegex","RegExp","pwdRegex","email","test","pwd","user","password","transactions","balance","number","userDB","push","Deposit","userDBContext","loggedInUser","getUser","userDBObj","userNum","startingBalance","setBalance","toFixed","toString","search","depositCreated","newBalance","Number","deposit","replace","isNaN","time","now","credit","debit","description","Withdraw","withdrawalCreated","withdraw","ChartRow","data","txnDate","Date","toLocaleDateString","AllData","userObj","chartHeader","reverse","txn","AppNav","changeActive","link","currentTarget","getElementsByClassName","Array","from","forEach","el","classList","remove","add","pageUrl","window","location","hash","active","backgroundColor","justifyContent","boxSizing","marginTop","to","place","effect","multiline","LanguageContext","language","UserLogin","logOut","fontSize","flexWrap","borderRight","console","log","textDecoration","color","App","setLoggedInUser","Provider","logo","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a430da7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heroimage.99862984.jpeg\";","function Card({image, header, content, form, className}) {\n\n    return (\n\n        <div className={className ? \"card \" + className : \"card\"}>\n            {image ?  <img alt=\"\" src={image} width=\"100%\" className=\"card-img-top\" /> : null}\n            {header ?  <div className=\"card-header\"><h4>{header}</h4></div> : null}\n            <div className=\"card-body\">\n                {content ? content : null}\n                {form ? form : null}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;","import heroImg from '../assets/heroimage.jpeg';\nimport Card from '../components/Card.js';\n\nfunction Home() {\n\n    const image = heroImg;\n    const header = 'Welcome to Bad Bank of America';\n    const content = <p>See how Bad Bank of America® banking solutions and Bad Merrill Edge® Investment services can help make your personal financial life easier.</p>;\n    \n    return (\n        <Card image={image} header={header} content={content}></Card>\n    )\n\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/closeButton.47dd7fbc.svg\";","import '../styles/notification.css';\nimport Card from './Card.js';\nimport closeButton from '../assets/closeButton.svg';\n\nfunction Notification({title, text, type, handleClick}) {\n\n    let parsedContent = title ? <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}><h4>{title}</h4>{text}</div></>\n                                : text;\n\n    return (\n        <div className=\"notification-container\" >\n            <Card className={type === 'success' ? \"notification-card green\" : type === 'error' ? \"notification-card red\" : \"notification-card\"} content={parsedContent} style={{padding: '50px', fontWeight:'500'}}></Card>\n        </div>\n    )\n}\n\nexport default Notification;","import { useFormik } from 'formik';\nimport '../styles/formik.css';\nimport Notification from './Notification.js';\nimport { useState } from 'react';\n\nfunction FormFormik({formFields, formSubmission}) {\n\n    let {buttons, success, failure, idRoot, submitHelper} = formSubmission\n    let initialFieldValues = {};\n\n    let manuallyClosed = false;\n\n    const [submitted, setSubmitted] = useState(false);\n    const notification = {title: 'Success', type: 'success', text: success};\n\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const formik = useFormik({\n\n        initialValues: initialFieldValues,\n\n        onSubmit: values => {\n\n            const outcome = submitHelper(values);\n\n            if (outcome === 'failure') {\n                notification.type = 'error';\n                notification.title = 'Account Create Failed';\n                notification.text = failure;\n                setSubmitted(true);\n            }\n            else {\n                formSubmission.accountCreated = true;\n                const buttonArr = formSubmission.buttons.filter(x=> x.type=\"submit\")[0];\n                let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n                buttonEl.innerHTML = buttonArr.altDisplay;\n                \n                notification.type = 'success';\n                notification.title = 'Success';\n                notification.text = success;\n                setSubmitted(true);\n            }\n\n            for (let field in formFields) {\n                let element = document.getElementById(formFields[field].name);\n                element.value = '';\n                values[formFields[field].name] = '';\n            }\n\n            setTimeout(()=>{if (manuallyClosed === false) setSubmitted(false)},5000);\n        },\n\n        validate: values => {\n            let errors = {};\n            for (let field in formFields) {\n                const thisField = formFields[field];\n                const validation = thisField.validation;\n\n                for (let item of validation) {\n                    let validationFunction = item.function;\n                    let errorMsg = item.error;\n                    let value = values[thisField.name];\n                    if(validationFunction(value) === false) { errors[thisField.name] = errorMsg }\n                }\n\n            }\n\n            return errors;\n\n        }\n\n    })\n\n    const handleClick = () => {\n        setSubmitted(false);\n        manuallyClosed = true;\n    }\n\n    return (\n        <form id={idRoot} className=\"form-formik\" onSubmit={formik.handleSubmit}>\n            {submitted === true ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={handleClick}></Notification> : null}\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <div className='field-name'><b>{field.display}</b></div>\n                        <div className='input-lockup'>\n                            <input type={field.type} autoComplete=\"off\" id={field.name} name={field.name} onChange={formik.handleChange} value={formik.values[field.name]} className={formik.errors[field.name] && formik.values[field.name] ? 'input-visible-error' : formik.errors[field.name] ? 'input-error' : formik.values[field.name] ? 'input-visible-noerror' : 'input-noerror'} />\n                            {formik.errors[field.name] ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{formik.errors[field.name]}</div> : null }\n                        </div>\n                    </div>\n                )\n            })}\n            <div className='buttons'>\n                <div className='button-buffer'></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(formik.errors).every(x=>x==='') && Object.values(formik.values).some(x=> x !=='') ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>{buttonEl.dependency() ? buttonEl.altDisplay : buttonEl.display}</button>\n                        </div>\n                    )\n                    \n                })}\n                \n            \n            </div>\n        </form>\n    )\n\n}\n\nexport default FormFormik;","function FormReactFinal({formFields, formSubmission}) {\n\n    return (\n        <div>React Final Form Goes Here</div>\n    )\n\n}\n\nexport default FormReactFinal;","function FormReactHook({formFields, formSubmission}) {\n\n    return (\n        <div>React Hook Form Goes Here</div>\n    )\n\n}\n\nexport default FormReactHook;","import { createContext } from \"react\";\n\nconst UserDBContext = createContext({users:[]});\n\nexport default UserDBContext;","import { createContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport default UserContext;","import { createContext } from \"react\";\n\nconst FormContext = createContext({form:'formik'});\n\nexport default FormContext;","import FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\nimport Card from '../components/Card';\nimport {useContext} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport UserContext from '../helpers/UserContext';\nimport FormContext from '../helpers/FormContext';\n\nfunction CreateAccount() {\n\n    const userDBcontext = useContext(UserDBContext);\n\n    const getUserCount = (userDBcontext) => userDBcontext.users.length;\n    const formObj = useContext(FormContext);\n    const formProvider = formObj.form;\n    const accountCreated = getUserCount(userDBcontext) === 0 ? false : true;\n\n    const { logIn } = useContext(UserContext);\n\n    const valLength = val => val.length > 0;\n    const nameLength = val => val.length >= 4;\n    const emlRegex = new RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,'i');\n    const pwdRegex = new RegExp(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{0,}$/,\"i\");\n    const emailFormat = email => emlRegex.test(email);\n    const passwordLength = val => val.length >= 8;\n    const passwordFormat = pwd => pwdRegex.test(pwd);\n\n    const formFields = \n        [{  name: 'name',\n            display: 'Name',\n            type: 'text',\n            validation: [{function: valLength, error: 'Please enter your name'},\n                         {function: nameLength, error: 'Name must be 4 or more characters long'}  ],\n            },\n            {\n            name: 'email',\n            type: 'text',\n            display: 'Email',\n            validation: [{function: valLength, error: 'Please enter your email address'},\n                        {function: emailFormat, error: 'Please enter a valid email address'}]\n            },\n            {\n            name: 'password',\n            type: 'password',\n            display: 'Password',\n            validation: [   {function: passwordLength, error: 'Must be 8 characters or longer'},\n                            {function: passwordFormat, error: 'Must include letter, number & special character.'}\n                        ]\n            }\n        ]\n\n    const submitHelperFunc = (values) => {\n\n        const user = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            transactions: [],\n            balance: 0,\n            number: getUserCount(userDBcontext) + 1,\n         };\n\n        let userDB = userDBcontext.users;\n\n        let filtered = userDB.filter(x=>x.email === values.email);\n        \n        if (filtered.length > 0) {return 'failure'}\n        else {\n            userDB.push(user);\n            logIn(user.number);\n            return 'success';\n        }\n\n    }\n\n    const formSubmission = {buttons:[{type:'submit',name:'submit',display:'Create Account', altDisplay: 'Add Another Account', dependency: () => accountCreated === true, className:'btn btn-primary'}],\n                            submitHelper: submitHelperFunc,\n                            success: 'Your account has been created and you have automatically been logged in. You may now make deposits and withdrawals.',\n                            failure: 'An account is already associated with that email! Please use a different one.',\n                            idRoot: 'create-account',\n                            accountCreated: accountCreated\n                            }\n\n\n\n    const header = \"Create a New Account\";\n    const content = <p>Enter your name, email, and password and click submit to create a new account!</p>;\n    let form = '';\n\n\n    switch (formProvider) {\n\n        case 'formik':\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={accountCreated} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            form = <FormReactFinal \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={accountCreated} >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            form = <FormReactHook \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={accountCreated} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={accountCreated} >\n                    </FormFormik>;\n    }\n\n    return (\n        <Card header={header} content={content} form={form}></Card>\n    )\n\n}\n\nexport default CreateAccount;","import FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\nimport Card from '../components/Card';\nimport {useContext, useState} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport { now } from 'lodash';\n\nfunction Deposit() {\n\n    const userDBContext = useContext(UserDBContext);\n\n    const {loggedInUser} = useContext(UserContext);\n\n    const getUser = (userDBObj, userNum) => {\n        const users = userDBObj.users;\n        let user =  userNum !== null ? users.filter(x=>x.number === userNum)[0] :   \n                    users.length > 0 ? users[0] : null\n        return user;\n    }\n\n    const formObj = useContext(FormContext);\n    const formProvider = formObj.form;\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    const header = \"Make a Deposit\";\n    const content = <><p>Enter an amount and click submit to make a deposit to your account!</p><h4>Current Balance: ${balance.toFixed(2)}</h4></>;\n    let form = '';\n\n    const valLength = (val) => val.length > 0;\n    const valPositive = (val) => val.toString().search(/^-/) === -1;\n    const typeCheck = (val) => val.toString().search(/[0-9.,-]/) > -1 && val.toString().search(/[^0-9.,-]/) === -1;\n    const decimalCheck = (val) => val.toString().search(/(\\.){2,}/) === -1 && val.toString().search(/\\.(.){3,}/) === -1;\n\n    const formFields = [{\n                            name: 'deposit',\n                            display: 'Amount ($)',\n                            type: 'text',\n                            validation: [{function: valLength, error: 'Please enter an amount to deposit'},\n                                         {function: valPositive, error: 'Please enter a positive amount'},\n                                         {function: typeCheck, error: 'Please enter a positive number, with no currency symbol'},\n                                         {function: decimalCheck, error: 'Please only enter 2 decimal points'}  ],\n                        }];\n\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === null) {return 'failure'}\n            else {\n                let newBalance = balance + Number(values.deposit.replace(',',''));\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({time: now(), credit: Number(values.deposit.replace(',','')), debit: null, description: 'Deposit to account', newBalance: balance + Number(Number(values.deposit.replace(',','')).toFixed(2)) })\n                return 'success';\n            }\n    \n        }\n    const depositCreated = false;\n\n    const formSubmission = {buttons:[{type:'submit',name:'submit',display:'Deposit', altDisplay: 'Deposit', dependency: () => false, className:'btn btn-primary'}],\n                            submitHelper: submitHelperFunc,\n                            success: 'Your deposit has been recorded!',\n                            failure: 'We were unable to make a deposit. Please try again later.',\n                            idRoot: 'deposit',\n                            accountCreated: depositCreated,\n                            };\n\n    switch (formProvider) {\n\n        case 'formik':\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={depositCreated} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            form = <FormReactFinal \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={depositCreated} >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            form = <FormReactHook \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={depositCreated} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={depositCreated} >\n                    </FormFormik>;\n    }\n\n\n    return (\n            <>\n            {loggedInUser ? <Card header={header} content={content} form={form}></Card> :\n                    <Card header={header} content=\"You must be logged in to make a deposit!\" form=\"\"></Card> }\n            </>\n    )\n\n}\n\nexport default Deposit;","import FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\nimport Card from '../components/Card';\nimport {useContext, useState} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport { now } from 'lodash';\n\nfunction Withdraw() {\n\n    const userDBContext = useContext(UserDBContext);\n    const {loggedInUser} = useContext(UserContext);\n   \n    const getUser = (userDBObj, userNum) => {\n        const users = userDBObj.users;\n        let user =  userNum !== null ? users.filter(x=>x.number === userNum)[0] :   \n                    users.length > 0 ? users[0] : null\n        return user;\n    }\n\n    const formObj = useContext(FormContext);\n    const formProvider = formObj.form;\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    const header = \"Make a Withdrawal\";\n    const content = <><p>Enter an amount and click submit to make a withdrawal from your account!</p><h4>Current Balance: ${balance.toFixed(2)}</h4></>;\n    let form = '';\n\n    const valLength = (val) => val.length > 0;\n    const valPositive = (val) => val.toString().search(/^-/) === -1;\n    const typeCheck = (val) => val.toString().search(/[0-9.,-]/) > -1 && val.toString().search(/[^0-9.,-]/) === -1;\n    const decimalCheck = (val) => val.toString().search(/(\\.){2,}/) === -1 && val.toString().search(/\\.(.){3,}/) === -1;\n    const balCheck = (val) => Number(val.replace(',','')) <= balance || isNaN(Number(val));\n\n    const formFields = [{\n                            name: 'withdraw',\n                            display: 'Amount ($)',\n                            type: 'text',\n                            validation: [{function: valLength, error: 'Please enter an amount to withdraw'},\n                                         {function: valPositive, error: 'Please enter a positive amount to withdraw'},\n                                         {function: typeCheck, error: 'Please enter a positive amount to withdraw, with no currency symbol'},\n                                         {function: decimalCheck, error: 'Please only enter 2 decimal points'},\n                                         {function: balCheck, error: 'Overdraw alert: Amount is more than your available balance'}]\n                        }];\n\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === '') {return 'failure'}\n            else {\n                let newBalance = balance - Number(values.withdraw.replace(',',''));\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({time: now(), credit: null, debit: Number(values.withdraw.replace(',','')), description: 'Withdrawal from account', newBalance: balance - Number(Number(values.withdraw.replace(',','')).toFixed(2)) })\n                return 'success';\n            }\n    \n        }\n\n    const withdrawalCreated = false;\n\n    const formSubmission = {buttons:[{type:'submit',name:'submit',display:'Submit', altDisplay: 'Submit', dependency: () => false, className:'btn btn-primary'}],\n                            submitHelper: submitHelperFunc,\n                            success: 'Your withdrawal has been recorded!',\n                            failure: 'We were unable to make a withdrawal. Please try again later.',\n                            idRoot: 'withdraw',\n                            accountCreated: withdrawalCreated,\n                            };\n\n    switch (formProvider) {\n\n        case 'formik':\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={withdrawalCreated} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            form = <FormReactFinal \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={withdrawalCreated} >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            form = <FormReactHook \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={withdrawalCreated} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            form = <FormFormik \n                        formFields={formFields} \n                        formSubmission={formSubmission} \n                        accountCreated={withdrawalCreated} >\n                    </FormFormik>;\n    }\n\n\n    return (\n            <>\n            { loggedInUser !== '' && balance > 0 ? <Card header={header} content={content} form={form}></Card> :\n                    loggedInUser !== ''  ? \n                    <Card header={header} content={<><p>You must have a positive balance amount in order to make a withdrawal from your account!</p><h4>Current Balance: ${balance.toFixed(2)}</h4></>} form=\"\"></Card> : \n                    <Card header={header} content={<p>You must be logged in and have a positive balance in order to request a withdrawal!</p>} form=\"\"></Card> \n            }\n            </>\n    )\n\n}\n\nexport default Withdraw;","import Card from '../components/Card';\nimport {useContext} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport UserContext from '../helpers/UserContext';\nimport '../styles/alldata.css';\n\nfunction AllData() {\n\n    const userDBcontext = useContext(UserDBContext);\n    const {loggedInUser} = useContext(UserContext);\n\n    const getUser = (userObj, userNum) => {\n        const users = userObj.users;\n        let user =  userNum !== '' ? users.filter(x=>x.number === userNum)[0] :   \n                    users.length > 0 ? users[0] : null\n        return user;\n    }\n\n    let transactions = getUser(userDBcontext,loggedInUser) ? getUser(userDBcontext,loggedInUser).transactions : [];\n\n    const chartHeader = <div className=\"data-grid-header-row\"><div className=\"align-left\"><b>Date</b></div><div className=\"data-grid-description align-left\"><b>Description</b></div><div className=\"align-right\"><b>Credit</b></div><div className=\"align-right\"><b>Debit</b></div><div className=\"align-right\"><b>Balance</b></div></div>;\n\n    const header = \"Recent Transactions\";\n    const content = <div className=\"data-grid\">{chartHeader}{transactions.reverse().map((txn,i)=><ChartRow key={i} data={txn}></ChartRow>)}</div>;\n    let form = '';\n\n\n    return (\n        <>\n        {loggedInUser !== '' && transactions.length > 0 ? <Card header={header} content={content} form={form}></Card> :\n                <Card header={header} content=\"No transactions available to display\" form={form}></Card>}\n        </>\n    )\n\n}\n\nfunction ChartRow({data}) {\n    const txnDate = new Date(data.time);\n    return (\n        <div className=\"data-grid-row\"><div className=\"align-left\">{txnDate.toLocaleDateString()}</div><div className=\"data-grid-description align-left\">{data.description}</div>{data.credit !== null ? <div className=\"align-right\">${data.credit.toFixed(2)}</div> : <div></div>}{data.debit !== null ? <div className=\"align-right\">-${data.debit.toFixed(2)}</div> : <div></div>}<div className=\"align-right\">${data.newBalance.toFixed(2)}</div></div>\n    )\n}\n\nexport default AllData;","import {Link} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport '../styles/appnav.css';\n\nfunction AppNav() {\n    \n    const changeActive = e => {\n       let targetEl = e.currentTarget;\n       let link = targetEl.getElementsByClassName('nav-link')[0];\n       let currentlyActive = Array.from(document.getElementsByClassName('active'));\n        currentlyActive.forEach(el => el.classList.remove('active'));\n        link.classList.add('active');\n    }  \n\n    const pageUrl = window.location.hash;\n\n    const active = {home: pageUrl === '#/' ? ' active' : '',\n                    createAccount: pageUrl === '#/create-account/' ? ' active' :  '',\n                    deposit: pageUrl === '#/deposit/' ? ' active' :  '',\n                    withdraw: pageUrl === '#/withdraw/' ? ' active' :  '',\n                    allData: pageUrl === '#/all-data/' ? ' active' :  ''\n                    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark responsive-nav\" style={{backgroundColor:\"#c41230\", fontWeight: \"500\"}}>\n            <div className=\"container-fluid\" style={{justifyContent:\"left\"}}>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent2\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent2\">\n                    <ul id=\"app-navigation\" className=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-center\" style={{boxSizing:\"border-box\",marginTop:'4px',width:\"100%\"}}>\n                        <li id=\"home-link\" style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for=\"home-link-tooltip\"  data-iscapture=\"true\" data-tip=\"Return to Home\">\n                            <Link to=\"/\" className={\"nav-link\" + active.home}>Home</Link>\n                        </li>\n                        <li id=\"create-account-link\" style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for=\"create-account-link-tooltip\"  data-iscapture=\"true\" data-tip=\"Create an Account\">\n                            <Link to=\"/create-account/\" className={\"nav-link\" + active.createAccount}>Create Account</Link>\n                        </li>\n                        <li id=\"deposit-link\" style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for=\"deposit-link-tooltip\"  data-iscapture=\"true\" data-tip=\"Deposit to Your Account\">\n                            <Link to=\"/deposit/\" className={\"nav-link\" + active.deposit}>Deposit</Link>\n                        </li>\n                        <li id=\"withdraw-link\" style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for=\"withdraw-link-tooltip\"  data-iscapture=\"true\" data-tip=\"Withdraw from Your Account\">\n                            <Link to=\"/withdraw/\" className={\"nav-link\" + active.withdraw}>Withdraw</Link>\n                        </li>\n                        <li id=\"all-data-link\" style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for=\"all-data-link-tooltip\"  data-iscapture=\"true\" data-tip=\"View All Transaction Data\">\n                            <Link to=\"/all-data/\" className={\"nav-link\" + active.allData}>All Data</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n             <ReactTooltip id=\"home-link-tooltip\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n             <ReactTooltip id=\"create-account-link-tooltip\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n             <ReactTooltip id=\"deposit-link-tooltip\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n             <ReactTooltip id=\"withdraw-link-tooltip\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n             <ReactTooltip id=\"all-data-link-tooltip\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n        </nav>\n    )\n}\n\nexport default AppNav;","export default __webpack_public_path__ + \"static/media/logo.3d10f139.svg\";","import { createContext } from \"react\";\n\nconst LanguageContext = createContext({language:'en'});\n\nexport default LanguageContext;","import UserContext from \"../helpers/UserContext\";\nimport UserDBContext from \"../helpers/UserDBContext\";\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/userLogin.css';\n\nfunction UserLogin() {\n\n    const userDBContext = useContext(UserDBContext);\n\n    const {loggedInUser, logIn, logOut} = useContext(UserContext);\n\n\n    const getUser = (userDBContext, loggedInUser) => {\n        return userDBContext.users.filter(x=>x.number === loggedInUser)[0];\n    }\n\n    const handleSignOut = () => {\n        if (loggedInUser !== '') {\n            logOut();\n        }\n    }\n\n    const handleSignIn = () => {\n        if (loggedInUser === '' && userDBContext.users.length > 0) {\n            let userNum = userDBContext.users[userDBContext.users.length - 1].number;\n            logIn(userNum);\n        }\n        else {\n            console.log('error!! no user exists to log in');\n        }\n    }\n    \n    const changeActive = () => {\n        let targetEl = document.getElementById('create-account-link');\n        let link = targetEl.getElementsByClassName('nav-link')[0];\n        let currentlyActive = Array.from(document.getElementsByClassName('active'));\n         currentlyActive.forEach(el => el.classList.remove('active'));\n         link.classList.add('active');\n     }  \n\n    return (\n        <div style={{padding:'10px',fontSize:\"0.8rem\", height: 'auto', margin:'auto 0px', display:'flex',flexWrap:'nowrap'}}>\n        {(loggedInUser !== '') ? <div style={{padding: '0px 10px',borderRight: '1px solid #ccc'}}>{getUser(userDBContext,loggedInUser).name}</div> : null}<div className='login-link' onClick={loggedInUser !== '' ? handleSignOut : userDBContext.users.length > 0 ? handleSignIn : changeActive}>{loggedInUser !== ''  ? 'Sign Out' : userDBContext.users.length > 0 ? 'Sign In' : <Link style={{textDecoration:'none',color:'black'}} to=\"/create-account/\">Sign In</Link>}</div>\n        </div>\n    )\n}\n\nexport default UserLogin;","import './styles/App.css';\nimport './styles/bootstrap.min.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport Home from './pages/Home.js';\nimport CreateAccount from './pages/CreateAccount.js';\nimport Deposit from './pages/Deposit';\nimport Withdraw from './pages/Withdraw';\nimport AllData from './pages/AllData';\nimport AppNav from './components/AppNav';\nimport logo from './assets/logo.svg';\nimport LanguageContext from './helpers/LanguageContext';\nimport FormContext from './helpers/LanguageContext';\nimport UserContext from './helpers/UserContext';\nimport UserDBContext from './helpers/LanguageContext';\nimport UserLogin from './components/UserLogin';\n\nfunction App() {\n\n  const [loggedInUser, setLoggedInUser] = useState('');\n\n  function logOut() {\n    setLoggedInUser('');\n  }\n  function logIn(val) {\n    setLoggedInUser(val);\n  }\n  \n  return (\n    <>\n    <HashRouter>\n    <UserDBContext.Provider value={{users: []}}>\n    <UserContext.Provider value={{ loggedInUser, logOut, logIn }}>\n        <LanguageContext.Provider value={{language:'en'}}>\n          <div className=\"App\">\n            <div className=\"brand-div\"><img alt=\"\" src={logo} className=\"brand-image\"/></div>\n            <div className=\"login-widget\"><UserLogin loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser}></UserLogin></div>\n            <AppNav />\n            <div className=\"container\" style={{padding:'20px'}}>\n           \n                <FormContext.Provider value={{form:'formik'}}>\n                  \n                      <Route path=\"/\" exact component={Home}></Route>\n                      <Route path=\"/create-account/\" exact component={CreateAccount}></Route>\n                      <Route path=\"/deposit/\" exact component={Deposit}></Route>\n                      <Route path=\"/withdraw/\" exact component={Withdraw}></Route>\n                      <Route path=\"/all-data/\" exact component={AllData}></Route>\n                    \n                </FormContext.Provider>\n             \n            </div>\n          </div>\n          </LanguageContext.Provider>\n          </UserContext.Provider>\n      </UserDBContext.Provider>\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}