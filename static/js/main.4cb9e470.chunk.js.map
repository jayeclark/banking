{"version":3,"sources":["assets/closeButton.svg","assets/heroimage.jpeg","assets/logo.svg","components/Card.js","components/Notification.js","helpers/LanguageContext.js","data/languages.js","helpers/UserContext.js","helpers/UserDBContext.js","helpers/library.js","helpers/validation.js","components/FormFormik.js","components/FormReactFinal.js","components/FormReactHook.js","helpers/formParser.js","helpers/FormContext.js","helpers/NotificationContext.js","components/SignIn.js","pages/Home.js","pages/CreateAccount.js","pages/Deposit.js","pages/Withdraw.js","components/Pagination.js","pages/Transactions.js","pages/AllData.js","components/AppNav.js","components/UserLogin.js","components/Footer.js","components/OptionsNav.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","image","header","content","form","className","id","alt","src","width","Notification","title","text","type","handleClick","time","parsedContent","onClick","e","closeButton","height","style","margin","padding","seconds","useState","transitionDuration","setStyle","useEffect","setTimeout","fontWeight","LanguageContext","createContext","language","languages","en","fr","it","de","es","UserContext","UserDBContext","users","getUser","userDBObj","userNum","filter","x","number","length","getUserCount","parseNumber","str","numDigits","Number","replace","toFixed","parseValidation","formFields","validationFunctions","availableArgs","forEach","field","i","validation","v","j","hasOwnProperty","name","functionName","a","k","value","Helpers","UsersExist","useContext","hasInput","val","len","isPositive","toString","search","isNumber","hasTwoSigFigs","isLessThanBalance","balance","replaceAll","isValidEmailFormat","email","RegExp","test","isValidPasswordFormat","pwd","FormFormik","formSubmission","buttons","idRoot","submitHelper","initialFieldValues","formik","useFormik","initialValues","onSubmit","values","accountCreated","buttonArr","buttonEl","document","getElementById","innerHTML","altDisplay","validate","errors","thisField","item","validationFunction","function","errorMsg","error","itemArgValues","reduce","b","push","handleSubmit","map","key","htmlFor","display","autoComplete","onChange","handleChange","Object","every","some","dependency","FormReactFinal","getValidators","validators","validatorFunction","itemArgs","undefined","render","submitting","pristine","hasValidationErrors","validator","input","meta","placeholder","touched","disabled","FormReactHook","useForm","mode","register","getValues","setValue","formState","isDirty","message","formParser","formType","fields","submission","formComponent","FormContext","setNewForm","NotificationContext","notification","displayNotification","SignIn","logIn","formProvider","forms","success","failure","general","successTitle","failureTitle","user","password","usersWithSameEmail","matchingUser","Home","loggedInUser","pages","cardMsg","card","heroImg","CreateAccount","addUser","transactions","now","Deposit","userDBContext","startingBalance","setBalance","balanceMsg","valueIfNotLoggedIn","newBalance","deposit","isNaN","credit","debit","description","typeOfAction","Withdraw","valueIfNoData","withdraw","Pagination","data","itemsPerPage","maxPages","verbose","minimal","currentPage","onPageChange","pageNum","Math","ceil","console","log","startPage","max","pageArray","Array","keys","slice","minWidth","flexGrow","ChartRow","txnDate","Date","toLocaleDateString","Transactions","userDBcontext","cardCols","chartHeader","page","setPage","filteredTransactions","paginate","reverse","txn","targetText","target","textContent","UserChartRow","showPwd","setShowPwd","position","substring","repeat","right","textAlign","border","color","borderRadius","fontSize","AllData","allData","AppNav","navs","pageKey","dataFor","toolTip","navButton","navRoute","pageUrl","window","location","hash","active","home","createAccount","backgroundColor","justifyContent","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","boxSizing","marginTop","nav","link","currentTarget","getElementsByClassName","from","el","classList","remove","add","changeActive","data-for","data-iscapture","data-tip","to","place","effect","multiline","UserLogin","logOut","changeLanguage","signOut","signIn","flexWrap","alignItems","textDecoration","defaultValue","selectBox","selectedValue","options","selectedIndex","tabIndex","Footer","components","footer","footerLinks","links","connectCTA","memberFDIC","rightsReserved","href","rel","focusable","xmlns","viewBox","d","fill","fillRule","OptionsNav","flexShrink","zIndex","whiteSpace","App","setLoggedInUser","setLanguage","setUsers","setNotification","setForm","Provider","currentUsers","lan","logo","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4cb9e470.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closeButton.2abe73a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/heroimage.39631568.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.8501eddc.svg\";","import React from 'react';\nimport '../styles/Card.css';\n\nfunction Card({image, header, content, form, className, id}) {\n\n    return (\n\n        <div id={id ? id : null} className={className ? \"card \" + className : \"card\"}>\n            {image ?  <img alt=\"\" src={image} width=\"100%\" className=\"card-img-top\" /> : null}\n            {header ?  <div className=\"card-header\"><h4>{header}</h4></div> : null}\n            <div className=\"card-body\">\n                {content ? content : null}\n                {form ? form : null}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;","import '../styles/Notification.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.js';\nimport closeButton from '../assets/closeButton.svg';\n\nfunction Notification({title, text, type, handleClick, time}) {\n\n    let parsedContent = title ? <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}><h4>{title}</h4>{text}</div></>\n                                : <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}>{text}</div></>;\n\n    const seconds = time / 1000;\n\n    const [style, setStyle] = useState({width: '100%', transitionDuration: '10ms'})\n\n    useEffect(()=> {\n        setStyle({width: '100%', transitionDuration: '10ms'});\n        setStyle({width: '100%', transitionDuration: seconds + 's'});\n        setTimeout(()=> setStyle({width: '0%', transitionDuration: seconds + 's'}), 10);\n    }, [seconds]);\n\n    return (\n        <div className=\"notification-container\" >\n            <div className={type === 'success' ? \"notification-card green\" : type === 'failure' ? \"notification-card red\" : \"notification-card\"}>\n                <Card content={parsedContent} style={{padding: '50px', fontWeight:'500'}}></Card> \n                <div className={type === 'success' ? \"notification-countdown-green\" : type === 'failure' ? \"notification-countdown-red\" : \"notification-countdown\"}>\n                    <div className={type === 'success' ? \"countdown-progress-green\" : type === 'failure' ? \"countdown-progress-red\" : \"countdown-progress\"} style={style}></div>\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default Notification;","import { createContext } from \"react\";\n\nconst LanguageContext = createContext({language:'en'});\n\nexport default LanguageContext;","import en from './en.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport de from './de.json';\nimport es from './es.json';\n\nconst languages = {en, fr, it, de, es};\n\nexport default languages;","import { createContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport default UserContext;","import { createContext } from \"react\";\n\nconst UserDBContext = createContext({users:[]});\n\nexport default UserDBContext;","import { useContext } from 'react';\nimport UserDBContext from \"./UserDBContext\";\n\nexport const getUser = (userDBObj, userNum) => {\n    const users = userDBObj.users;\n    let user =  userNum !== null ? users.filter(x=>x.number === userNum)[0] :   \n                users.length > 0 ? users[0] : null\n    return user;\n}\n\nexport const getUserCount = (users) => users.length;\n\nexport const UsersExist = () => {\n    const { users } = useContext(UserDBContext);\n    return users ? users.length > 0 : false;\n}\n\nexport const parseNumber = (str, numDigits) => Number(Number(str.replace(',','')).toFixed(numDigits));\n\nexport function parseValidation(formFields, validationFunctions, availableArgs={}) {\n\n    formFields.forEach((field,i)=>{\n\n        field.validation.forEach((v,j)=>{\n\n            // Import validation functions based on reference name\n            if (!v.hasOwnProperty(\"function\") || !v[\"function\"]) {\n                const name = v.functionName;\n                v[\"function\"] = validationFunctions[name];\n            }\n            \n            // Import any additional arguments beyond 'value', as needed\n            if (v.hasOwnProperty(\"args\")) {\n\n                // Add relevant value to each arg object\n                v[\"args\"].forEach((a,k)=>{\n                    if (availableArgs.hasOwnProperty(a.name)) {\n                       formFields[i].validation[j][\"args\"][k].value = availableArgs[a.name];\n                    }\n                })\n            }\n\n        })\n    })\n\n}\n\nexport const Helpers = { getUser, getUserCount, UsersExist, parseNumber, parseValidation}","const hasInput = (val, len=1) => val.length >= len;\n\nconst isPositive = val => val.toString().search(/^-/) === -1;\n\nconst isNumber = val => val.toString().replace(/[,.]/g,'').search(/^(\\d+)$/) > -1;\n\nconst hasTwoSigFigs = val => val.toString().search(/([.]){1,}(\\d){3,}/) === -1;\n\nconst isLessThanBalance = (val, balance) => Number(val.replaceAll(',','')) <= balance ||  val.toString().search(/^(\\d{1,3}){0,1}(,\\d\\d\\d){0,}((\\.)((\\d){0,2})){0,1}$/)  === -1;\n\nconst isValidEmailFormat = email => {\n        const emlRegex = new RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,'i');\n        return emlRegex.test(email);\n    }\n\nconst isValidPasswordFormat = pwd => {\n        const pwdRegex = new RegExp(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{0,}$/,\"i\");\n        return pwdRegex.test(pwd);\n    }\n\nconst validationFunctions = { hasInput, isPositive, isNumber, hasTwoSigFigs, isLessThanBalance, isValidEmailFormat, isValidPasswordFormat };\n\nexport default validationFunctions","import React from 'react';\nimport { useFormik } from 'formik';\nimport '../styles/Formik.css';\nimport { Helpers } from '../helpers/library';\n\nfunction FormFormik({ formFields, formSubmission }) {\n\n    const { buttons, idRoot, submitHelper } = formSubmission;\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const formik = useFormik({\n\n        initialValues: initialFieldValues,\n\n        onSubmit: values => {\n\n            const outcome = submitHelper(values);\n\n            // Only change the button and reset the form if submission was successful\n            if (outcome === 'success') {\n\n                formSubmission.accountCreated = true;\n                const buttonArr = formSubmission.buttons.filter(x=> x.type=\"submit\")[0];\n                let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n                if (buttonArr.hasOwnProperty(\"altDisplay\")) {buttonEl.innerHTML = buttonArr.altDisplay;}\n                \n                for (let field in formFields) {\n                    let element = document.getElementById(formFields[field].name);\n                    element.value = '';\n                    values[formFields[field].name] = '';\n                }\n\n            }\n\n        },\n\n        validate: values => {\n            let errors = {};\n            for (let field in formFields) {\n                const thisField = formFields[field];\n                const validation = thisField.validation;\n\n                for (let item of validation) {\n                    let validationFunction = item.function;\n                    let errorMsg = item.error;\n                    let value = values[thisField.name];\n\n                    if (item.hasOwnProperty(\"args\")) {\n                        let itemArgs = item[\"args\"];\n                        let itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n                        if (itemArgValues.length > 1 && validationFunction(value, ...itemArgValues) === false) { errors[thisField.name] = errorMsg }\n                        else if (itemArgValues.length === 1 && validationFunction(value, itemArgValues[0]) === false) { errors[thisField.name] = errorMsg }\n                    }\n                    else {\n                        if(validationFunction(value) === false) { errors[thisField.name] = errorMsg }\n                    }\n \n                }\n\n            }\n\n            return errors;\n\n        }\n\n    })\n\n    return (\n        <form id={idRoot} className=\"form-formik\" onSubmit={formik.handleSubmit}>\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <label className='field-name' htmlFor={field.name}><b>{field.display}</b></label>\n                        <div className='input-lockup'>\n                            <input type={field.type} autoComplete=\"off\" id={field.name} name={field.name} onChange={formik.handleChange} value={formik.values[field.name]} className={formik.errors[field.name] && formik.values[field.name] ? 'input-visible-error' : formik.errors[field.name] ? 'input-error' : formik.values[field.name] ? 'input-visible-noerror' : 'input-noerror'} />\n                            {formik.errors[field.name] ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{formik.errors[field.name]}</div> : null }\n                        </div>\n                    </div>\n                )\n            })}\n            <div className='buttons'>\n                <div className='button-buffer'></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(formik.errors).every(x=>x==='') && Object.values(formik.values).some(x=> x !=='') ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>\n                                {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                            </button>\n                        </div>\n                    )\n                    \n                })}\n            </div>\n        </form>\n    )\n\n}\n\nexport default FormFormik;","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { Helpers } from '../helpers/library';\nimport '../styles/ReactFinal.css';\n\nfunction FormReactFinal({formFields, formSubmission}) {\n\n    const { buttons, idRoot, submitHelper } = formSubmission;\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const getValidators = (field, value) => {\n        const validators = [];\n        const validation = field.validation;\n        for (let item of validation) {\n            let validatorFunction = item.function;\n            let errorMsg = item.error;\n            let itemArgValues = [];\n            if (item.hasOwnProperty(\"args\")) {\n                let itemArgs = item[\"args\"];\n                itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n            }\n\n            const thisValidator = (value='') => {\n                if (itemArgValues.length > 1) {\n                    return validatorFunction(value, ...itemArgValues) ? undefined : errorMsg\n                }\n                else if (itemArgValues.length === 1) {\n                    return validatorFunction(value, itemArgValues[0]) ? undefined : errorMsg\n                }\n                return validatorFunction(value) ? undefined : errorMsg;\n            }\n            validators.push(thisValidator);\n        }\n        return validators;\n    }\n\n    const composeValidators = (validators) => (value) => {\n        let reduced = validators.reduce((error, validator) => error || validator(value), undefined);\n        return reduced;\n    }\n        \n\n    const onSubmit = values => {\n\n        const outcome = submitHelper(values);\n\n        // Only change the button and reset the form if submission was successful\n        if (outcome === 'success') {\n           formSubmission.accountCreated = true;\n            const buttonArr = formSubmission.buttons.filter(x => x.type=\"submit\")[0];\n            let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n            if (buttonArr.hasOwnProperty(\"altDisplay\")) { buttonEl.innerHTML = buttonArr.altDisplay; }\n  \n            for (let field in formFields) {\n                let element = document.getElementById(formFields[field].name);\n                element.value = '';\n                values[formFields[field].name] = '';\n            }\n        }\n    }\n\n    return (\n        <Form \n            onSubmit={onSubmit}\n            initialValues={initialFieldValues}\n            render={({ handleSubmit, submitting, pristine, values, hasValidationErrors }) => (\n                <form id={idRoot} className=\"react-final\" onSubmit={handleSubmit}>\n                    {formFields.map((field,i)=> {\n                        return (\n                            <Field key={i} name={field.name} validate={composeValidators(getValidators(field, values[field.name]))}>\n                                {({ input, meta }) => (\n                                    <div key={i} className=\"input-container\">\n                                        <div className=\"field-name\"><b>{field.display}</b></div>\n                                        <div className=\"input-lockup\">\n                                            <input {...input} type={field.type} autoComplete=\"off\" id={field.name} name={field.name} placeholder={field.display} className={meta.error && input.value ? 'input-visible-error' : meta.error ? 'input-error ' : input.value ? 'input-visible-noerror' : 'input-noerror'}/>\n                                            {meta.error && meta.touched && <span className=\"error\">{meta.error}</span>}\n                                        </div>\n                                    </div>\n                                )}\n                            </Field>\n\n                        )\n                    })}\n                    <div className=\"buttons\">\n                        <div className=\"button-buffer\"></div>\n                        {buttons.map((buttonEl,i)=>{\n                            return (\n                                <div key={i} className=\"button-container\">\n                                    <button \n                                        id={idRoot + \"-\" + buttonEl.name} \n                                        type={buttonEl.type}\n                                        disabled={submitting || pristine || hasValidationErrors}\n                                        className={buttonEl.className}\n                                    >\n                                        {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                                    </button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </form>\n            )}\n        />\n    )\n\n}\n\nexport default FormReactFinal;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../styles/ReactHook.css';\nimport { Helpers } from '../helpers/library';\n\nfunction FormReactHook({formFields, formSubmission}) {\n\n    const { register, handleSubmit, getValues, setValue, formState: { errors, isDirty } } = useForm({\n        mode: 'onChange',\n      });\n\n    const { buttons, idRoot, submitHelper } = formSubmission;\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const getValidators = (field, value) => {\n        const validators = [];\n        const validation = field.validation;\n        for (let item of validation) {\n            let validatorFunction = item.function;\n            let errorMsg = item.error;\n            let itemArgValues = [];\n            if (item.hasOwnProperty(\"args\")) {\n                let itemArgs = item[\"args\"];\n                itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n            }\n\n            const thisValidator = (value='') => {\n                if (itemArgValues.length > 1) {\n                    return validatorFunction(value, ...itemArgValues) ? undefined : errorMsg\n                }\n                else if (itemArgValues.length === 1) {\n                    return validatorFunction(value, itemArgValues[0]) ? undefined : errorMsg\n                }\n                return validatorFunction(value) ? undefined : errorMsg;\n            }\n            validators.push(thisValidator);\n        }\n        return validators;\n    }\n\n    const composeValidators = (validators, value) => (value) => {\n        let reduced = validators.reduce((error, validator) => error || validator(value), undefined);\n        return reduced;\n    }\n\n    const onSubmit = values => {\n\n        const outcome = submitHelper(values);\n\n        // Only change the button and reset the form if submission was successful\n        if (outcome === 'success') {\n            for (let field in formFields) {\n                let element = document.getElementById(formFields[field].name);\n                element.value = '';\n                setValue(formFields[field].name, '');\n            }\n        }\n    }\n\n    return (\n        <form id={idRoot} className=\"react-hook\" onSubmit={handleSubmit(onSubmit)}>\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <div className='field-name'><b>{field.display}</b></div>\n                        <div className='input-lockup'>\n                            <input \n                                type={field.type} \n                                autoComplete=\"off\" \n                                id={field.name} \n                                name={field.name} \n                                className={errors.hasOwnProperty(field.name) && getValues()[field.name] ? 'input-visible-error' : errors.hasOwnProperty(field.name) ? 'input-error' : getValues()[field.name] ?  'input-visible-noerror' : 'input-noerror'} \n                                {...register(field.name, { validate: composeValidators(getValidators(field, getValues()[field.name]), getValues()[field.name]) })} />\n                            {errors.hasOwnProperty(field.name) ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{errors[field.name].message}</div> : null}\n                        </div>\n                    </div>\n                )\n            })}\n            <div className=\"buttons\">\n                <div className=\"button-buffer\"></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(errors).length === 0 && (isDirty || Object.values(getValues()).length > 0) ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>\n                                {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                            </button>\n                        </div>\n                    )\n                })}\n            </div>\n        </form>\n    )\n\n}\n\nexport default FormReactHook;","import React from 'react';\nimport FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\n\nfunction formParser(formType, fields, submission) {\n\n    let formComponent;\n\n    switch (formType) {\n\n        case 'formik':\n            formComponent = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            formComponent = <FormReactFinal \n                        formFields={fields} \n                        formSubmission={submission}  >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            formComponent = <FormReactHook \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            formComponent = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik>;\n    }\n    \n    return formComponent;\n    \n}\n\nexport default formParser;","import { createContext } from \"react\";\n\nconst FormContext = createContext({form: null, setNewForm: null});\n\nexport default FormContext;","import { createContext } from \"react\";\n\nconst NotificationContext = createContext({notification: null, displayNotification: null});\n\nexport default NotificationContext;","import React from 'react';\nimport { useContext } from 'react';\nimport { parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport formParser from '../helpers/formParser';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport NotificationContext from '../helpers/NotificationContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nexport function SignIn() {\n\n        // Get user database, logged in user, form preference, and language\n        const { users } = useContext(UserDBContext);\n        const { logIn } = useContext(UserContext);\n        const { form: formProvider } = useContext(FormContext);\n        const { language } = useContext(LanguageContext);\n        const { displayNotification } = useContext(NotificationContext);\n    \n        // Load page content\n        const { formSubmission, formFields } = languages[language].forms['signIn'];\n        const content = <span className=\"card-content\"></span>;\n     \n        const { success, failure } = formSubmission;\n        const { successTitle, failureTitle } = languages[language].general;\n\n        // Parse validation functions\n        parseValidation(formFields, validationFunctions);\n    \n        // Add submission instructions\n        const submitHelperFunc = (values) => {\n    \n            const user = {\n                email: values.email,\n                password: values.password,\n             };\n    \n            let usersWithSameEmail = users.filter(user => user.email === values.email);\n            \n            if (usersWithSameEmail.length === 0) { \n                displayNotification({ title: failureTitle, type: 'failure', text: failure, time: 5000 });\n                return 'failure'; }\n            else {\n                let matchingUser = usersWithSameEmail[0];\n                let userPwd = matchingUser.password;\n                if (userPwd !== user.password) {\n                    displayNotification({ title: failureTitle, type: 'failure', text: failure, time: 5000 });\n                    return 'failure';\n                }\n                else {\n                    logIn(matchingUser.number);\n                    displayNotification({ title: successTitle, type: 'success', text: success, time: 5000 });\n                    return 'success';\n                }\n\n            }\n    \n        }\n        formSubmission.submitHelper = submitHelperFunc;\n    \n        // Create form component\n        const form = formParser(formProvider, formFields, formSubmission);\n    \n        return (\n            <Card id=\"sign-in-card\" header=\"Sign In to Your Account\" content={content} form={form}></Card>\n        )\n    \n\n\n}","import React from 'react';\nimport { useContext } from 'react';\nimport Card from '../components/Card.js';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages';\nimport heroImg from '../assets/heroimage.jpeg';\nimport UserContext from '../helpers/UserContext.js';\nimport UserDBContext from '../helpers/UserDBContext.js';\nimport { SignIn } from '../components/SignIn.js';\n\nfunction Home() {\n\n    // Get language preference and import content data based on it\n    const { language } = useContext(LanguageContext);\n\n    const { loggedInUser } = useContext(UserContext);\n    const { users } = useContext(UserDBContext);\n    \n    // Load page content\n    const pageName = \"home\";\n    let { header, card: { cardMsg }, id } = languages[language].pages[pageName];\n    const [content, image] = [<span>{ cardMsg }</span>, heroImg];\n\n    if (loggedInUser) { header += \", \" + users.filter(x => x.number === loggedInUser)[0].name + \"!\"; }\n    \n    return (\n        <div className=\"home-splash\">  \n            { loggedInUser ? null : users.length > 0 ? <SignIn /> : null} \n            <Card id={ id } image={ image } header={ header } content={ content }></Card>\n        </div> \n    )\n\n}\n\nexport default Home;\n","import React from 'react';\nimport { useContext } from 'react';\nimport { getUserCount, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport formParser from '../helpers/formParser';\nimport { now } from 'lodash';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport NotificationContext from '../helpers/NotificationContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nfunction CreateAccount() {\n\n    // Get user database, logged in user, form preference, and language\n    const { users, addUser } = useContext(UserDBContext);\n    const { logIn } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n    const { displayNotification } = useContext(NotificationContext);\n\n    // Load page content\n    const pageName = 'createAccount';\n    const { header, card: {cardMsg}, id } = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <span className=\"card-content\">{ cardMsg }</span>;\n\n    // Get notification content\n    const { success, failure } = formSubmission;\n    const { successTitle, failureTitle } = languages[language].general;\n\n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n        const user = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            transactions: [],\n            balance: 0,\n            time: now(),\n            number: getUserCount(users) + 1,\n         };\n\n        let usersWithSameEmail = users.filter(user => user.email === values.email);\n        \n        if (usersWithSameEmail.length > 0) { \n            displayNotification({ title: failureTitle, type: 'failure', text: failure, time: 5000 });\n            return 'failure'; \n        }\n        else {\n            addUser(user);\n            logIn(user.number);\n            displayNotification({ title: successTitle, type: 'success', text: success, time: 5000 });\n            return 'success';\n        }\n\n    }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n        <Card id={id} header={header} content={content} form={form}></Card>\n    )\n\n}\n\nexport default CreateAccount;","import React from 'react';\nimport { useContext, useState } from 'react';\nimport formParser from '../helpers/formParser';\nimport { getUser, parseNumber, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport { now } from 'lodash';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport NotificationContext from '../helpers/NotificationContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nfunction Deposit() {\n\n    // Get user database, logged in user, form preference, and language preference\n    const userDBContext = useContext(UserDBContext);\n    const { loggedInUser } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n    const { displayNotification } = useContext(NotificationContext);\n\n    // Determine starting balance, and set local component balance\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Get page content\n    const pageName = \"deposit\";\n    const { header, card: { cardMsg, balanceMsg }, id, valueIfNotLoggedIn } = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <><span className=\"card-content\">{ cardMsg }</span><h4 className=\"card-balance-msg\">{ balanceMsg }{ balance.toFixed(2) }</h4></>;\n\n    // Get notification content\n    const { success, failure } = formSubmission;\n    const { successTitle, failureTitle } = languages[language].general;\n\n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n \n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === null) {\n                displayNotification({ title: failureTitle, type: 'failure', text: failure, time: 5000 });\n                return 'failure';\n            }\n            else {\n                let newBalance = balance + parseNumber(values.deposit, 2);\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push(\n                    {   time: now(), \n                        credit: parseNumber(values.deposit, 2), \n                        debit: null, \n                        description: formSubmission.typeOfAction, \n                        newBalance \n                    })\n                displayNotification({ title: successTitle, type: 'success', text: success, time: 5000 });\n                return 'success';\n            }\n    \n        }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            {loggedInUser ? <Card id={id} header={header} content={content} form={form}></Card> :\n                            <Card id={id} header={header} content={valueIfNotLoggedIn} form={null}></Card>}\n            </>\n    )\n\n}\n\nexport default Deposit;","import React from 'react';\nimport { useContext, useState } from 'react';\nimport { now } from 'lodash';\nimport formParser from '../helpers/formParser';\nimport { getUser, parseNumber, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport NotificationContext from '../helpers/NotificationContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\n\nimport languages from '../data/languages.js';\n\nfunction Withdraw() {\n\n    // Get user database, logged in user, form provider, and language\n    const userDBContext = useContext(UserDBContext);\n    const { loggedInUser } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n    const { displayNotification } = useContext(NotificationContext);\n\n    // Get logged in user number, determine starting balance, and set local balance state\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Get page content\n    const pageName = \"withdraw\";\n    const { header, card: {cardMsg, balanceMsg }, id, valueIfNoData, valueIfNotLoggedIn} = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <><span className=\"card-content\">{cardMsg}</span><h4 className=\"card-balance-msg\">{ balanceMsg }{ balance.toFixed(2) }</h4></>;\n\n    // Get notification content\n    const { success, failure } = formSubmission;\n    const { successTitle, failureTitle } = languages[language].general;\n\n    // Parse validation functions\n    const availableArgs = { balance };\n    parseValidation(formFields, validationFunctions, availableArgs);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === '') {\n                displayNotification({ title: failureTitle, type: 'failure', text: failure, time: 5000 });\n                return 'failure';\n            }\n            else {\n                let newBalance = balance - parseNumber(values.withdraw, 2);\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({ time: now(), \n                                                                        credit: null, \n                                                                        debit: parseNumber(values.withdraw, 2), \n                                                                        description: formSubmission.typeOfAction, \n                                                                        newBalance\n                                                                      })\n                displayNotification({ title: successTitle, type: 'success', text: success, time: 5000 });\n                return 'success';\n            }\n    \n        }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            {   loggedInUser !== '' && balance > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                loggedInUser !== ''  ? <Card id={ id } header={ header } content={ <><p>{ valueIfNoData }</p><h4>{ balanceMsg }{ balance.toFixed(2) }</h4></> } form=\"\"></Card> : \n                                       <Card id={ id } header={ header } content={ <p>{ valueIfNotLoggedIn }</p> } form=\"\"></Card> }\n            </>\n    )\n\n}\n\nexport default Withdraw;","import React from 'react';\nimport '../styles/Pagination.css';\n\nexport function paginate(data, itemsPerPage, currentPage) {\n    return data.slice(currentPage, currentPage + itemsPerPage)\n}\n\nexport function Pagination({ data,  itemsPerPage, maxPages, verbose, minimal, currentPage, onPageChange }) {\n\n    if (data.length <= itemsPerPage) {return null;}\n    const pageNum = Math.ceil(data.length / itemsPerPage);\n\n    if (maxPages % 2 === 0 && maxPages + 1 <= pageNum) {\n        maxPages++;\n    }\n    else if (maxPages > pageNum) {\n        maxPages = pageNum;\n    }\n\n    console.log('v: ', verbose);\n    console.log('pagnum: ' +pageNum);\n    const startPage = maxPages < pageNum ? Math.max(currentPage - ((maxPages - 1) / 2), 0) : 0;\n    const pageArray = [...Array(maxPages + 1).keys()].slice(1);\n\n    return (\n        <div className=\"page-button-container\" style={minimal ? {width: '100%'} : null}>\n            {pageNum > 5 ? <button id=\"first\" disabled={currentPage === 0 ? true : false}>{verbose === \"yes\" ? \"First Page\" : \"<<\"}</button> : null}\n            {pageNum > 1 ? <button id=\"previous\" className={currentPage === startPage ? \"page-button disabled\" : \"page-button\"} type=\"button\" onClick={onPageChange} disabled={currentPage === startPage ? true : false}>{verbose === \"yes\" ? \"Previous Page\" : \"<\"}</button> : null}\n            {minimal === false ? pageArray.map((x,i)=><button className={currentPage === i ? \"page-button disabled current-page\" : \"page-button\"} key={i} onClick={onPageChange} disabled={currentPage === i ? true : false}>{i+1}</button>) : <div style={{minWidth: \"40px\", flexGrow: 1}}></div>}\n            {pageNum > 1 ? <button id=\"previous\" className={currentPage === startPage + maxPages - 1 ? \"page-button disabled\" : \"page-button\"} type=\"button\" onClick={onPageChange} disabled={currentPage === startPage + maxPages - 1 ? true : false}>{verbose === \"yes\" ? \"Next Page\" : \">\"}</button> : null}\n            {pageNum > 3 ? <button id=\"last\" className={currentPage === maxPages - 1 ? \"page-button disabled\" : \"page-button\"}>{verbose === \"yes\" ? \"Last Page\" : \">>\"}</button> : null}\n        </div>\n    )\n\n}\n","import React from 'react';\nimport { useContext, useState } from 'react';\nimport { getUser } from '../helpers/library';\nimport Card from '../components/Card';\nimport { Pagination, paginate } from '../components/Pagination';\nimport UserDBContext from '../helpers/UserDBContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\nimport '../styles/Transactions.css';\n\nfunction Transactions() {\n\n    // Get user database\n    const userDBcontext = useContext(UserDBContext);\n\n    // Get logged in user number\n    const {loggedInUser} = useContext(UserContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    let transactions = getUser(userDBcontext,loggedInUser) ? getUser(userDBcontext,loggedInUser).transactions : [];\n\n    // Load page content\n    const {header, card: {cardCols}, id, valueIfNoData, valueIfNotLoggedIn} = data.pages.transactions;\n    const chartHeader = <div className=\"data-grid-header-row\"><div className=\"align-left\"><b>{cardCols[0]}</b></div><div className=\"data-grid-description align-left\"><b>{cardCols[1]}</b></div><div className=\"align-right\"><b>{cardCols[2]}</b></div><div className=\"align-right\"><b>{cardCols[3]}</b></div><div className=\"align-right\"><b>{cardCols[4]}</b></div></div>;\n    const itemsPerPage = 5;\n    const [page, setPage] = useState(0);\n    const handleSetPage = (e) => {\n        const targetText = e.target.textContent;\n        const pageNum = Math.ceil(transactions.length / itemsPerPage);\n        if (targetText === \"First Page\" || targetText === \"<<\") { setPage(0) } \n        else if (targetText === \"Previous Page\" || targetText === \"<\") { setPage(page - 1) }\n        else if (targetText === \"Next Page\" || targetText === \">\") { setPage(page + 1) }\n        else if (targetText === \"Last Page\" || targetText === \">>\") { setPage(pageNum - 1) }\n        else {setPage(Number(targetText) - 1)}\n    };\n    const filteredTransactions = paginate(transactions, itemsPerPage, page);\n\n    const content = <div className=\"data-grid\">\n                        {chartHeader}\n                        {filteredTransactions.reverse().map((txn,i)=><ChartRow key={i} data={txn}></ChartRow>)}\n                        <Pagination data={transactions} maxPages={5} verbose=\"no\" itemsPerPage={itemsPerPage} minimal={false} currentPage={page} onPageChange={handleSetPage} />\n                    </div>;\n    let form = '';\n\n\n    return (\n        <>\n        {loggedInUser !== '' && transactions.length > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                loggedInUser !== ''  ? <Card id={id} header={header} content={ valueIfNoData || content } form={form}></Card> : \n                <Card id={id} header={header} content={ valueIfNotLoggedIn || content } form={form}></Card>}\n        </>\n    )\n\n}\n\nfunction ChartRow({data}) {\n    const txnDate = new Date(data.time);\n    return (\n        <div className=\"data-grid-row\"><div className=\"align-left\">{txnDate.toLocaleDateString()}</div><div className=\"data-grid-description align-left\">{data.description}</div>{data.credit !== null ? <div className=\"align-right\">${data.credit.toFixed(2)}</div> : <div></div>}{data.debit !== null ? <div className=\"align-right\">-${data.debit.toFixed(2)}</div> : <div></div>}<div className=\"align-right\">${data.newBalance.toFixed(2)}</div></div>\n    )\n}\n\nexport default Transactions;","import React from 'react';\nimport { useContext, useState } from 'react';\nimport Card from '../components/Card';\nimport UserDBContext from '../helpers/UserDBContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\nimport '../styles/AllData.css';\n\nfunction AllData() {\n\n    // Get user database\n    const { users } = useContext(UserDBContext);\n\n    // Get language preference and import content data based on it\n    const { language } = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Load page content\n    const { header, card: {cardCols}, id, valueIfNoData } = data.pages.allData;\n    const chartHeader = <><div className=\"align-left\"><b>{cardCols[0]}</b></div><div className=\"align-left\"><b>{cardCols[1]}</b></div><div className=\"align-left\"><b>{cardCols[2]}</b></div><div className=\"align-left\"><b>{cardCols[3]}</b></div></>;\n\n    const content = <div className=\"user-data-grid\">{chartHeader}{users.map((user,i)=><UserChartRow key={i} data={user}></UserChartRow>)}</div>;\n    let form = '';\n\n    return (\n        <>\n        {users.length > 0 ? <Card id={ id } header={ header } content={ content } form={ form }></Card> :\n                <Card id={ id } header={ header } content={ valueIfNoData || content } form={ form }></Card>}\n        </>\n    )\n\n}\n\nfunction UserChartRow({data}) {\n    const txnDate = new Date(data.time);\n    const [showPwd, setShowPwd] = useState(false);\n\n    const togglePwd = () => {\n\n        if (showPwd === false) {\n            setShowPwd(true);\n        }\n        else if (showPwd === true) {\n            setShowPwd(false);\n        }\n\n    }\n\n    const maskPwd = (pwd) => pwd.substring(0,1) + '*'.repeat(pwd.length - 1);\n\n    return (\n        <><div className=\"align-left\">{ txnDate.toLocaleDateString() }</div><div className=\"align-left\">{ data.name }</div><div className=\"align-left\">{ data.email }</div><div style={{position:\"relative\"}} className=\"align-left\"><span style={{display:\"inline-block\",padding:\"0px 3px 0px 0px\"}}>{ showPwd ? data.password : maskPwd(data.password) }</span><span onClick={ togglePwd } style={{ display: \"inline-block\", padding:\"2px\", position: \"absolute\", right: \"0px\", minWidth: \"39px\", textAlign:\"center\", margin:\"2px\", border:\"1px solid #ddd\", color:\"#666\", borderRadius:\"5px\", fontSize:\"0.7em\" }}>{ showPwd ? \"Hide\" : \"Show\" }</span></div></>\n    )\n}\n\nexport default AllData;","import {Link} from 'react-router-dom';\nimport React, {useContext} from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport '../styles/AppNav.css';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\n\nfunction AppNav() {\n    \n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Build list of nav links\n    const pages = Object.keys(data.pages);\n    const navs = pages.map(key => {\n        const page = data.pages[key];\n        return {\n                pageKey: key,\n                id: page.id.replace('-page','-link'),\n                dataFor: page.id.replace('-page','-link-tooltip'),\n                toolTip: page[\"nav-tool-tip\"],\n                navButton: page[\"nav-button\"],\n                navRoute: page[\"nav-route\"]\n                }\n    });\n\n    const changeActive = e => {\n       let targetEl = e.currentTarget;\n       let link = targetEl.getElementsByClassName('nav-link')[0];\n       let currentlyActive = Array.from(document.getElementsByClassName('active'));\n        currentlyActive.forEach(el => el.classList.remove('active'));\n        link.classList.add('active');\n    }  \n\n    const pageUrl = window.location.hash;\n\n    const active = {home: pageUrl === '#/' ? ' active' : '',\n                    createAccount: pageUrl === '#/create-account/' ? ' active' :  '',\n                    deposit: pageUrl === '#/deposit/' ? ' active' :  '',\n                    withdraw: pageUrl === '#/withdraw/' ? ' active' :  '',\n                    transactions: pageUrl === '#/transactions/' ? ' active' :  '',\n                    allData: pageUrl === '#/all-data/' ? ' active' :  ''\n                    }\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark responsive-nav\" style={{backgroundColor:\"#c41230\", fontWeight: \"500\"}}>\n            <div className=\"container-fluid\" style={{justifyContent:\"left\"}}>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent2\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent2\">\n                    <ul id=\"app-navigation\" className=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-center\" style={{boxSizing:\"border-box\",marginTop:'4px',width:\"100%\"}}>\n                        {navs.map((nav,i)=> <li id={nav.id} key={i} style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for={nav.dataFor}  data-iscapture=\"true\" data-tip={nav.toolTip}><Link to={nav.navRoute} className={\"nav-link\" + active[nav.pageKey]}>{nav.navButton}</Link></li>)}\n                    </ul>\n                </div>\n            </div>\n            {navs.map((nav,i)=> <ReactTooltip id={nav.dataFor} key={i} place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />)}\n        </nav>\n    )\n}\n\nexport default AppNav;","import React from 'react';\nimport UserContext from \"../helpers/UserContext\";\nimport UserDBContext from \"../helpers/UserDBContext\";\nimport LanguageContext from '../helpers/LanguageContext';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/UserLogin.css';\nimport languages from '../data/languages';\n\nfunction UserLogin() {\n\n    const { users } = useContext(UserDBContext);\n\n    const { loggedInUser, logOut } = useContext(UserContext);\n\n    // Get language context and set language data\n    const { language, changeLanguage } = useContext(LanguageContext);\n    const data = languages[language];\n    const { signOut, signIn } = data.general;\n\n    const getUser = (users, loggedInUser) => {\n        return users.filter(x=>x.number === loggedInUser)[0];\n    }\n\n    const handleSignOut = () => {\n        if (loggedInUser !== '') {\n            logOut();\n        }\n    }\n \n    const handleChange = e => {\n        const selectBox = document.getElementById(\"language-toggler\");\n        const selectedValue = selectBox.options[selectBox.selectedIndex].value;\n        if (language !== selectedValue) {changeLanguage(selectedValue)}\n    }\n\n    return (\n        <div style={{padding:'10px',fontSize:\"0.8rem\", height: 'auto', margin:'auto 0px', display:'flex',flexWrap:'nowrap',alignItems:'center'}}>\n            {(loggedInUser !== '') ? <div className=\"login-name\">{getUser(users, loggedInUser).name}</div> : null}\n            <div className='login-link' onClick={loggedInUser !== '' ? handleSignOut : null}>{loggedInUser !== '' ? signOut : users.length > 0 ? <Link style={{textDecoration:'none',color:'black', fontSize:'inherit'}} to=\"/\">{signIn}</Link>: null}\n            </div>\n            <div className=\"language-toggle-container\">\n                <select id=\"language-toggler\"  className=\"language-toggle\" defaultValue={language} onChange={handleChange} tabIndex=\"0\">\n                    <option value=\"en\">English</option>\n                    <option value=\"es\">Spanish</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default UserLogin;","import React from 'react';\nimport { useContext} from \"react\";\nimport LanguageContext from \"../helpers/LanguageContext\";\nimport languages from \"../data/languages\";\nimport '../styles/Footer.css';\n\nfunction Footer() {\n\n    // Get language and import data\n    const { language } = useContext(LanguageContext);\n    const data = languages[language]\n\n    // Get items\n    const {links: footerLinks, connectCTA, memberFDIC, rightsReserved} = data.components.footer;\n\n    return (\n        <div className=\"footer-container\">\n            <div className=\"footer-links\">\n                {footerLinks.map((link,i) => <div key={i} className=\"link-container\">{i !== 0 ? <div className=\"divider\"></div> : null}<div className=\"fake-link\">{link}</div></div>)}\n            </div>\n            <div className=\"footer-social\">\n                <div id=\"globalSocialModule\">\n                    <div className=\"social\">\n                        <h5 className=\"social-header\">{connectCTA}</h5>\n                        <a href=\"https://www.facebook.com/BankofAmerica/\" rel=\"noopener noreferrer\" target=\"_blank\" id=\"social_follow_facebook_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><g><path d=\"M28.345,0H1.656A1.656,1.656,0,0,0,0,1.656V28.344A1.655,1.655,0,0,0,1.656,30H28.345A1.655,1.655,0,0,0,30,28.344V1.656A1.656,1.656,0,0,0,28.345,0\" fill=\"#fff\"></path><path d=\"M24.6,18.383l0.584-4.527H20.7V10.965c0-1.311.364-2.205,2.244-2.205h2.4V4.709a32.181,32.181,0,0,0-3.492-.178c-3.457,0-5.824,2.109-5.824,5.984v3.34H12.115v4.527h3.908V30H20.7V18.383h3.9Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"https://www.instagram.com/bankofamerica/\" rel=\"noopener noreferrer\"  target=\"_blank\" id=\"social_follow_instagram_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><path d=\"M26.539,12.69H23.927a9.23,9.23,0,1,1-17.854,0H3.461v12.7a1.154,1.154,0,0,0,1.154,1.152H25.384a1.154,1.154,0,0,0,1.155-1.152V12.69Zm0-8.075a1.153,1.153,0,0,0-1.155-1.153H21.923A1.153,1.153,0,0,0,20.77,4.614V8.076A1.154,1.154,0,0,0,21.923,9.23h3.461a1.154,1.154,0,0,0,1.155-1.153V4.614ZM15,9.23A5.77,5.77,0,1,0,20.77,15,5.769,5.769,0,0,0,15,9.23M26.539,30H3.461A3.462,3.462,0,0,1,0,26.537V3.461A3.461,3.461,0,0,1,3.461,0H26.539A3.461,3.461,0,0,1,30,3.461V26.537A3.462,3.462,0,0,1,26.539,30\" fill=\"#fff\" fillRule=\"evenodd\"></path></svg>\n                        </a>\n                        <a href=\"https://www.linkedin.com/company/bank-of-america\" rel=\"noopener noreferrer\"  target=\"_blank\" id=\"social_follow_linkedin_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.001\" height=\"30\" viewBox=\"0 0 30.001 30\"><g><path d=\"M27.781,0H2.215A2.188,2.188,0,0,0,0,2.16V27.836A2.191,2.191,0,0,0,2.215,30H27.781A2.2,2.2,0,0,0,30,27.836V2.16A2.192,2.192,0,0,0,27.781,0Z\" fill=\"#fff\"></path><path d=\"M4.448,11.246H8.9V25.563H4.448V11.246ZM6.674,4.129a2.58,2.58,0,1,1-2.58,2.58,2.58,2.58,0,0,1,2.58-2.58\" fill=\"#012169\"></path><path d=\"M11.689,11.246h4.268V13.2h0.06a4.681,4.681,0,0,1,4.21-2.311c4.506,0,5.338,2.965,5.338,6.82v7.852H21.118V18.6c0-1.658-.031-3.795-2.314-3.795-2.314,0-2.669,1.809-2.669,3.676v7.082H11.689V11.246Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"https://twitter.com/BankofAmerica\" target=\"_blank\" rel=\"noopener noreferrer\"  id=\"social_follow_twitter_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.914\" height=\"30\" viewBox=\"0 0 36.914 30\"><path d=\"M36.914,3.551a15.169,15.169,0,0,1-4.35,1.193A7.6,7.6,0,0,0,35.9.553a15.187,15.187,0,0,1-4.811,1.838A7.582,7.582,0,0,0,18.18,9.3,21.5,21.5,0,0,1,2.57,1.387,7.579,7.579,0,0,0,4.914,11.5a7.542,7.542,0,0,1-3.432-.946v0.095A7.577,7.577,0,0,0,7.559,18.07a7.621,7.621,0,0,1-3.422.131,7.587,7.587,0,0,0,7.076,5.26,15.194,15.194,0,0,1-9.4,3.241A15.57,15.57,0,0,1,0,26.6,21.439,21.439,0,0,0,11.609,30c13.93,0,21.549-11.541,21.549-21.549q0-.492-0.023-0.981A15.394,15.394,0,0,0,36.914,3.551Z\" fill=\"#fff\"></path></svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer-copyright\">\n                <p className=\"legal-text\">Bad Bank of America, N.A. {memberFDIC}</p>\n                <p className=\"legal-text\">©&nbsp;<span id=\"dynamic-copyright-year-update\">2021</span>&nbsp;Bad Bank of America Corporation. <span>{rightsReserved}</span></p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport '../styles/OptionsNav.css';\nimport { useContext } from 'react';\nimport FormContext from '../helpers/FormContext';\nimport ReactTooltip from 'react-tooltip';\n\nfunction OptionsNav() {\n\n  const { form, setNewForm } = useContext(FormContext);\n\n  const handleChange = (e) => {\n    let selectedValue = e.target.value;\n    if (form !== selectedValue) { setNewForm(selectedValue) }\n  }\n\n    return (\n      <div className=\"black-ribbon\">\n        <div className=\"option-nav-element\">\n          <div style={{display: \"flex\", alignItems:\"center\"}}>\n            <div className=\"left-caret\"></div><div><a className=\"option-link\" href=\"https://jayeclark.github.io\">Return to jayeclark.github.io</a></div>\n          </div>\n        </div>\n        <div className=\"option-nav-element hideable\" style={{flexShrink:1, flexGrow: 1, width: '100%', border:'1px solid transparent'}}></div>\n        <div className=\"option-nav-element form-provider-toggle right-justify\" style={{zIndex: '99999'}}>\n          <div style={{whiteSpace: \"nowrap\", fontSize: \"0.8rem\", padding: '5px', fontWeight: 'bold'}}>Form library: </div>\n            <select id=\"form-select\" className=\"form-select\" onChange={handleChange}  data-for=\"form-toggle-tip\"  data-iscapture=\"true\" data-tip=\"Select form library. (Resets any in-progress form.)\">\n              <option value=\"formik\">Formik</option>\n              <option value=\"reactHook\">React Hook Form</option>\n              <option value=\"reactFinal\">React Final Form</option>\n            </select>\n            <ReactTooltip id=\"form-toggle-tip\" key=\"1\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n        </div>\n      </div>\n    )\n}\nexport default OptionsNav","import './styles/App.css';\nimport './styles/bootstrap.min.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Notification from './components/Notification';\nimport Home from './pages/Home.js';\nimport CreateAccount from './pages/CreateAccount.js';\nimport Deposit from './pages/Deposit';\nimport Withdraw from './pages/Withdraw';\nimport Transactions from './pages/Transactions';\nimport AllData from './pages/AllData';\nimport AppNav from './components/AppNav';\nimport logo from './assets/logo.svg';\nimport LanguageContext from './helpers/LanguageContext';\nimport FormContext from './helpers/FormContext';\nimport NotificationContext from './helpers/NotificationContext';\nimport UserContext from './helpers/UserContext';\nimport UserDBContext from './helpers/UserDBContext';\nimport UserLogin from './components/UserLogin';\nimport Footer from './components/Footer';\nimport OptionsNav from './components/OptionsNav';\n\nfunction App() {\n\n  const [loggedInUser, setLoggedInUser] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [users, setUsers] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  const [form, setForm] = useState('formik');\n\n  function setNewForm(val) {\n    setForm(val);\n  }\n\n  function addUser(user) {\n    let currentUsers = [...users];\n    currentUsers.push(user);\n    setUsers(currentUsers);\n  }\n\n  function logOut() {\n    setLoggedInUser('');\n  }\n  function logIn(val) {\n    setLoggedInUser(val);\n  }\n  \n  function changeLanguage(lan) {\n    setLanguage(lan);\n  }\n\n  const closeNotification = () => {\n    let { title, text, type, time } = notification;\n    setNotification({ title, text, type, time, display: false })\n  }\n\n  function displayNotification({title, text, type, time}) {\n\n    // Clear any existing notification\n    setNotification({});\n\n    // Set new notification\n    setNotification({display: true, title, text, type, time});\n\n    // Remove notification after timeout\n    setTimeout(()=>setNotification({}), time);\n\n  }\n\n  return (\n    <>\n    <HashRouter>\n    <UserDBContext.Provider value={{users, addUser}}>\n    <UserContext.Provider value={{ loggedInUser, logOut, logIn }}>\n        <LanguageContext.Provider value={{ language, changeLanguage }}>\n          <FormContext.Provider value={{ form, setNewForm }}>\n            <OptionsNav></OptionsNav>\n              <div className=\"App\">\n              \n                  <div className=\"brand-div\"><img alt=\"\" src={logo} className=\"brand-image\"/></div>\n                  <div className=\"login-widget\"><UserLogin loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser}></UserLogin></div>\n                  <AppNav />\n                  <NotificationContext.Provider value={{ displayNotification }}>\n                    {notification && notification.display ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={closeNotification} time={notification.time}></Notification> : null}\n                    <div className=\"container\" style={{padding:'20px'}}>\n                      <Route path=\"/\" exact component={Home}></Route>\n                      <Route path=\"/create-account/\" exact component={CreateAccount}></Route>\n                      <Route path=\"/deposit/\" exact component={Deposit}></Route>\n                      <Route path=\"/withdraw/\" exact component={Withdraw}></Route>\n                      <Route path=\"/transactions/\" exact component={Transactions}></Route>\n                      <Route path=\"/all-data/\" exact component={AllData}></Route>\n                    </div>\n                  </NotificationContext.Provider>\n                  <Footer></Footer>\n                \n              </div>\n            </FormContext.Provider>\n          </LanguageContext.Provider>\n          </UserContext.Provider>\n      </UserDBContext.Provider>\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}