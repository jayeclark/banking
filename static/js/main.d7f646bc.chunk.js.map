{"version":3,"sources":["assets/heroimage.jpeg","components/Card.js","helpers/LanguageContext.js","data/languages.js","pages/Home.js","helpers/UserDBContext.js","helpers/FormContext.js","helpers/UserContext.js","assets/closeButton.svg","components/Notification.js","components/FormFormik.js","components/FormReactFinal.js","components/FormReactHook.js","helpers/formParser.js","helpers/validation.js","helpers/library.js","pages/CreateAccount.js","pages/Deposit.js","pages/Withdraw.js","pages/AllData.js","components/AppNav.js","assets/logo.svg","components/UserLogin.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","header","content","form","className","id","alt","src","width","LanguageContext","createContext","language","languages","en","fr","it","de","es","Home","heroImg","useContext","pages","home","cardMsg","card","UserDBContext","users","FormContext","UserContext","Notification","title","text","type","handleClick","parsedContent","onClick","e","closeButton","height","style","margin","padding","fontWeight","FormFormik","formFields","formSubmission","data","general","successTitle","failureTitle","buttons","success","failure","idRoot","submitHelper","initialFieldValues","manuallyClosed","closed","useState","submitted","setSubmitted","notification","field","name","formik","useFormik","initialValues","onSubmit","values","outcome","accountCreated","buttonArr","filter","x","buttonEl","document","getElementById","hasOwnProperty","innerHTML","altDisplay","value","setTimeout","validate","errors","thisField","validation","item","validationFunction","function","errorMsg","error","itemArgValues","reduce","a","b","push","length","handleSubmit","map","i","display","autoComplete","onChange","handleChange","Object","every","some","dependency","FormReactFinal","FormReactHook","formParser","formType","fields","submission","validationFunctions","hasInput","val","len","isPositive","toString","search","isNumber","hasTwoSigFigs","isLessThanBalance","balance","Number","replaceAll","emailFormat","email","RegExp","test","passwordFormat","pwd","getUser","userDBObj","userNum","number","parseValidation","availableArgs","forEach","v","j","functionName","k","CreateAccount","addUser","getUserCount","logIn","formProvider","createAccount","forms","user","password","transactions","Deposit","userDBContext","loggedInUser","startingBalance","setBalance","deposit","balanceMsg","valueIfNotLoggedIn","textAlign","toFixed","newBalance","replace","isNaN","time","now","credit","debit","description","typeOfAction","Withdraw","withdraw","valueIfNoData","ChartRow","txnDate","Date","toLocaleDateString","AllData","userDBcontext","allData","cardCols","chartHeader","reverse","txn","AppNav","navs","keys","key","page","pageKey","dataFor","toolTip","navButton","navRoute","pageUrl","window","location","hash","active","backgroundColor","justifyContent","boxSizing","marginTop","nav","link","currentTarget","getElementsByClassName","Array","from","el","classList","remove","add","changeActive","to","place","effect","multiline","UserLogin","logOut","changeLanguage","signOut","signIn","fontSize","flexWrap","alignItems","console","log","textDecoration","color","defaultValue","selectBox","selectedValue","options","selectedIndex","tabIndex","Footer","footerLinks","components","footer","links","class","href","focusable","xmlns","viewBox","d","fill","App","setLoggedInUser","setLanguage","setUsers","Provider","currentUsers","lan","logo","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7f646bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heroimage.99862984.jpeg\";","function Card({image, header, content, form, className, id}) {\n\n    return (\n\n        <div id={id ? id : null} className={className ? \"card \" + className : \"card\"}>\n            {image ?  <img alt=\"\" src={image} width=\"100%\" className=\"card-img-top\" /> : null}\n            {header ?  <div className=\"card-header\"><h4>{header}</h4></div> : null}\n            <div className=\"card-body\">\n                {content ? content : null}\n                {form ? form : null}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;","import { createContext } from \"react\";\n\nconst LanguageContext = createContext({language:'en'});\n\nexport default LanguageContext;","import en from './en.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport de from './de.json';\nimport es from './es.json';\n\nconst languages = {en, fr, it, de, es};\n\nexport default languages;","import heroImg from '../assets/heroimage.jpeg';\nimport Card from '../components/Card.js';\nimport { useContext } from 'react';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages';\n\nfunction Home() {\n\n    const image = heroImg;\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n    \n    // Load page content\n    const {header, card: {cardMsg}, id} = data.pages.home;\n    const content = <p>{cardMsg}</p>;\n    \n    return (\n        <Card id={id} image={image} header={header} content={content}></Card>\n    )\n\n}\n\nexport default Home;\n","import { createContext } from \"react\";\n\nconst UserDBContext = createContext({users:[]});\n\nexport default UserDBContext;","import { createContext } from \"react\";\n\nconst FormContext = createContext({form:'formik'});\n\nexport default FormContext;","import { createContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport default UserContext;","export default __webpack_public_path__ + \"static/media/closeButton.47dd7fbc.svg\";","import '../styles/notification.css';\nimport Card from './Card.js';\nimport closeButton from '../assets/closeButton.svg';\n\nfunction Notification({title, text, type, handleClick}) {\n\n    let parsedContent = title ? <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}><h4>{title}</h4>{text}</div></>\n                                : <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}>{text}</div></>;\n\n    return (\n        <div className=\"notification-container\" >\n            <Card className={type === 'success' ? \"notification-card green\" : type === 'error' ? \"notification-card red\" : \"notification-card\"} content={parsedContent} style={{padding: '50px', fontWeight:'500'}}></Card>\n        </div>\n    )\n}\n\nexport default Notification;","import { useFormik } from 'formik';\nimport '../styles/formik.css';\nimport Notification from './Notification.js';\nimport { useState } from 'react';\nimport data from '../data/en.json';\n\nfunction FormFormik({formFields, formSubmission}) {\n\n    const {successTitle, failureTitle} = data.general;\n\n    let {buttons, success, failure, idRoot, submitHelper} = formSubmission\n    let initialFieldValues = {};\n\n    let manuallyClosed = {idRoot: null, closed: false};\n\n    const [submitted, setSubmitted] = useState(false);\n    const notification = {title: successTitle, type: 'success', text: success};\n\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const formik = useFormik({\n\n        initialValues: initialFieldValues,\n\n        onSubmit: values => {\n\n            const outcome = submitHelper(values);\n            manuallyClosed.closed = false;\n\n            if (outcome === 'failure') {\n                notification.type = 'error';\n                notification.title = failureTitle;\n                notification.text = failure;\n                setSubmitted(true);\n            }\n            else {\n                formSubmission.accountCreated = true;\n                const buttonArr = formSubmission.buttons.filter(x=> x.type=\"submit\")[0];\n                let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n                if (buttonArr.hasOwnProperty(\"altDisplay\")) {buttonEl.innerHTML = buttonArr.altDisplay;}\n                \n                notification.type = 'success';\n                notification.title = successTitle;\n                notification.text = success;\n                setSubmitted(true);\n            }\n\n            for (let field in formFields) {\n                let element = document.getElementById(formFields[field].name);\n                element.value = '';\n                values[formFields[field].name] = '';\n            }\n\n            setTimeout(()=>{if (manuallyClosed.closed === false && manuallyClosed.idRoot === idRoot) {setSubmitted(false)}},5000);\n        },\n\n        validate: values => {\n            let errors = {};\n            for (let field in formFields) {\n                const thisField = formFields[field];\n                const validation = thisField.validation;\n\n                for (let item of validation) {\n                    let validationFunction = item.function;\n                    let errorMsg = item.error;\n                    let value = values[thisField.name];\n\n                    if (item.hasOwnProperty(\"args\")) {\n                        let itemArgs = item[\"args\"];\n                        let itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n                        if (itemArgValues.length > 1 && validationFunction(value, ...itemArgValues) === false) { errors[thisField.name] = errorMsg }\n                        else if (itemArgValues.length === 1 && validationFunction(value, itemArgValues[0]) === false) { errors[thisField.name] = errorMsg }\n                    }\n                    else {\n                        if(validationFunction(value) === false) { errors[thisField.name] = errorMsg }\n                    }\n \n                    \n                }\n\n            }\n\n            return errors;\n\n        }\n\n    })\n\n    const handleClick = () => {\n        if (manuallyClosed.closed === false) {setSubmitted(false);}\n        manuallyClosed.closed = true;\n        manuallyClosed.idRoot = idRoot;\n    }\n\n    return (\n        <form id={idRoot} className=\"form-formik\" onSubmit={formik.handleSubmit}>\n            {submitted === true ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={handleClick}></Notification> : null}\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <div className='field-name'><b>{field.display}</b></div>\n                        <div className='input-lockup'>\n                            <input type={field.type} autoComplete=\"off\" id={field.name} name={field.name} onChange={formik.handleChange} value={formik.values[field.name]} className={formik.errors[field.name] && formik.values[field.name] ? 'input-visible-error' : formik.errors[field.name] ? 'input-error' : formik.values[field.name] ? 'input-visible-noerror' : 'input-noerror'} />\n                            {formik.errors[field.name] ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{formik.errors[field.name]}</div> : null }\n                        </div>\n                    </div>\n                )\n            })}\n            <div className='buttons'>\n                <div className='button-buffer'></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(formik.errors).every(x=>x==='') && Object.values(formik.values).some(x=> x !=='') ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>{buttonEl.dependency && buttonEl.dependency() ? buttonEl.altDisplay : buttonEl.display}</button>\n                        </div>\n                    )\n                    \n                })}\n                \n            \n            </div>\n        </form>\n    )\n\n}\n\nexport default FormFormik;","function FormReactFinal({formFields, formSubmission}) {\n\n    return (\n        <div>React Final Form Goes Here</div>\n    )\n\n}\n\nexport default FormReactFinal;","function FormReactHook({formFields, formSubmission}) {\n\n    return (\n        <div>React Hook Form Goes Here</div>\n    )\n\n}\n\nexport default FormReactHook;","import FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\n\nfunction formParser(formType, fields, submission) {\n\n    let form;\n\n    switch (formType) {\n\n        case 'formik':\n            form = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            form = <FormReactFinal \n                        formFields={fields} \n                        formSubmission={submission}  >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            form = <FormReactHook \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            form = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik>;\n    }\n    \n    return form;\n    \n}\n\nexport default formParser;","const hasInput = (val, len=0) => val.length > len;\nconst isPositive = (val) => val.toString().search(/^-/) === -1;\nconst isNumber = (val) => val.toString().search(/^(\\d{1,3}){0,1}(,\\d\\d\\d){0,}((\\.)((\\d){0,2})){0,1}$/) > -1;\nconst hasTwoSigFigs = (val) => val.toString().search(/\\.(\\d){3,}/) === -1;\nconst isLessThanBalance = (val, balance) => Number(val.replaceAll(',','')) <= balance ||  val.toString().search(/^(\\d{1,3}){0,1}(,\\d\\d\\d){0,}((\\.)((\\d){0,2})){0,1}$/)  === -1;\nconst emailFormat = email => {\n    const emlRegex = new RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,'i');\n    return emlRegex.test(email);}\nconst passwordFormat = pwd => {\n    const pwdRegex = new RegExp(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{0,}$/,\"i\");\n    return pwdRegex.test(pwd);}\n\nconst validationFunctions = {hasInput, isPositive, isNumber, hasTwoSigFigs, isLessThanBalance, emailFormat, passwordFormat };\n\nexport default validationFunctions","\nexport const getUser = (userDBObj, userNum) => {\n    const users = userDBObj.users;\n    let user =  userNum !== null ? users.filter(x=>x.number === userNum)[0] :   \n                users.length > 0 ? users[0] : null\n    return user;\n}\n\nexport function parseValidation(formFields,validationFunctions,availableArgs={}) {\n\n    formFields.forEach((field,i)=>{\n\n        field.validation.forEach((v,j)=>{\n\n            // Import validation functions based on reference name\n            if (!v.hasOwnProperty(\"function\") || !v[\"function\"]) {\n                const name = v.functionName;\n                v[\"function\"] = validationFunctions[name];\n            }\n            \n            // Import any additional arguments beyond 'value', as needed\n            if (v.hasOwnProperty(\"args\")) {\n\n                // Add relevant value to each arg object\n                v[\"args\"].forEach((a,k)=>{\n                    if (availableArgs.hasOwnProperty(a.name)) {\n                       formFields[i].validation[j][\"args\"][k].value = availableArgs[a.name];\n                    }\n                })\n            }\n\n        })\n    })\n\n}\n","import Card from '../components/Card';\nimport {useContext} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport formParser from '../helpers/formParser';\nimport validationFunctions from '../helpers/validation';\nimport { parseValidation } from '../helpers/library';\nimport languages from '../data/languages.js';\n\nfunction CreateAccount() {\n\n    // Get user database\n    const {users, addUser} = useContext(UserDBContext);\n\n    const getUserCount = (users) => users.length;\n\n    // Get logged in user number\n    const { logIn } = useContext(UserContext);\n\n    // Get form preference\n    const {form: formProvider} = useContext(FormContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Load page content\n    const {header, card: {cardMsg}, id} = data.pages.createAccount;\n    const {formSubmission, formFields} = data.forms.createAccount;\n    const content = <p style={{padding:'20px 40px'}}>{cardMsg}</p>;\n \n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n        const user = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            transactions: [],\n            balance: 0,\n            number: getUserCount(users) + 1,\n         };\n\n        let filtered = users.filter(x=>x.email === values.email);\n        \n        if (filtered.length > 0) {return 'failure'}\n        else {\n            addUser(user);\n            logIn(user.number);\n            return 'success';\n        }\n\n    }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n        <Card id={id} header={header} content={content} form={form}></Card>\n    )\n\n}\n\nexport default CreateAccount;","import Card from '../components/Card';\nimport {useContext, useState} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport { now } from 'lodash';\nimport formParser from '../helpers/formParser';\nimport validationFunctions from '../helpers/validation';\nimport { getUser, parseValidation } from '../helpers/library';\nimport languages from '../data/languages.js';\n\nfunction Deposit() {\n\n    // Get user database\n    const userDBContext = useContext(UserDBContext);\n\n    // Get logged in user number, determine starting balance, and set balance\n    const {loggedInUser} = useContext(UserContext);\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Get form preference\n    const {form: formProvider} = useContext(FormContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n    \n    // Load page content\n    const {header, card: {cardMsg, balanceMsg}, id, valueIfNotLoggedIn} = data.pages.deposit;\n    const {formSubmission, formFields} = data.forms.deposit;\n    const content = <><p style={{padding:'20px 40px'}}>{cardMsg}</p><h4 style={{textAlign: 'right',padding:'0px 40px'}}>{balanceMsg}{balance.toFixed(2)}</h4></>;\n\n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n \n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === null) {return 'failure'}\n            else {\n                let newBalance = balance + Number(values.deposit.replace(',',''));\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({time: now(), credit: Number(values.deposit.replace(',','')), debit: null, description: formSubmission.typeOfAction, newBalance: balance + Number(Number(values.deposit.replace(',','')).toFixed(2)) })\n                return 'success';\n            }\n    \n        }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            {loggedInUser ? <Card id={id} header={header} content={content} form={form}></Card> :\n                    <Card id={id} header={header} content={valueIfNotLoggedIn} form=\"\"></Card> }\n            </>\n    )\n\n}\n\nexport default Deposit;","import Card from '../components/Card';\nimport {useContext, useState} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport { now } from 'lodash';\nimport formParser from '../helpers/formParser';\nimport validationFunctions from '../helpers/validation';\nimport { getUser, parseValidation } from '../helpers/library';\nimport languages from '../data/languages.js';\n\nfunction Withdraw() {\n\n    // Get user database\n    const userDBContext = useContext(UserDBContext);\n\n    // Get logged in user number, determine starting balance, and set balance state\n    const {loggedInUser} = useContext(UserContext);\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Get form preference\n    const {form: formProvider} = useContext(FormContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n    \n    // Load page content\n    const {header, card: {cardMsg, balanceMsg}, id, valueIfNoData, valueIfNotLoggedIn} = data.pages.withdraw;\n    const {formSubmission, formFields} = data.forms.withdraw;\n    const content = <><p style={{padding:'20px 40px'}}>{cardMsg}</p><h4 style={{textAlign: 'right',padding: '0px 40px'}}>{balanceMsg}{balance.toFixed(2)}</h4></>;\n\n    // Parse validation functions\n    const availableArgs = {balance};\n    parseValidation(formFields, validationFunctions, availableArgs);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === '') {return 'failure'}\n            else {\n                let newBalance = balance - Number(values.withdraw.replace(',',''));\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({time: now(), credit: null, debit: Number(values.withdraw.replace(',','')), description: formSubmission.typeOfAction, newBalance: balance - Number(Number(values.withdraw.replace(',','')).toFixed(2)) })\n                return 'success';\n            }\n    \n        }\n\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            { loggedInUser !== '' && balance > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                    loggedInUser !== ''  ? \n                    <Card id={id} header={header} content={<><p>{valueIfNoData}</p><h4>{balanceMsg}{balance.toFixed(2)}</h4></>} form=\"\"></Card> : \n                    <Card id={id} header={header} content={<p>{valueIfNotLoggedIn}</p>} form=\"\"></Card> \n            }\n            </>\n    )\n\n}\n\nexport default Withdraw;","import Card from '../components/Card';\nimport {useContext} from 'react';\nimport UserDBContext from '../helpers/UserDBContext';\nimport UserContext from '../helpers/UserContext';\nimport '../styles/alldata.css';\nimport LanguageContext from '../helpers/LanguageContext';\nimport { getUser } from '../helpers/library';\nimport languages from '../data/languages.js';\n\nfunction AllData() {\n\n    // Get user database\n    const userDBcontext = useContext(UserDBContext);\n\n    // Get logged in user number\n    const {loggedInUser} = useContext(UserContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    let transactions = getUser(userDBcontext,loggedInUser) ? getUser(userDBcontext,loggedInUser).transactions : [];\n\n    // Load page content\n    const {header, card: {cardCols}, id, valueIfNoData, valueIfNotLoggedIn} = data.pages.allData;\n    const chartHeader = <div className=\"data-grid-header-row\"><div className=\"align-left\"><b>{cardCols[0]}</b></div><div className=\"data-grid-description align-left\"><b>{cardCols[1]}</b></div><div className=\"align-right\"><b>{cardCols[2]}</b></div><div className=\"align-right\"><b>{cardCols[3]}</b></div><div className=\"align-right\"><b>{cardCols[4]}</b></div></div>;\n\n    const content = <div className=\"data-grid\">{chartHeader}{transactions.reverse().map((txn,i)=><ChartRow key={i} data={txn}></ChartRow>)}</div>;\n    let form = '';\n\n\n    return (\n        <>\n        {loggedInUser !== '' && transactions.length > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                loggedInUser !== ''  ? <Card id={id} header={header} content={valueIfNotLoggedIn || content} form={form}></Card> : \n                <Card id={id} header={header} content={valueIfNoData || content} form={form}></Card>}\n        </>\n    )\n\n}\n\nfunction ChartRow({data}) {\n    const txnDate = new Date(data.time);\n    return (\n        <div className=\"data-grid-row\"><div className=\"align-left\">{txnDate.toLocaleDateString()}</div><div className=\"data-grid-description align-left\">{data.description}</div>{data.credit !== null ? <div className=\"align-right\">${data.credit.toFixed(2)}</div> : <div></div>}{data.debit !== null ? <div className=\"align-right\">-${data.debit.toFixed(2)}</div> : <div></div>}<div className=\"align-right\">${data.newBalance.toFixed(2)}</div></div>\n    )\n}\n\nexport default AllData;","import {Link} from 'react-router-dom';\nimport {useContext} from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport '../styles/appnav.css';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\n\nfunction AppNav() {\n    \n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Build list of nav links\n    const pages = Object.keys(data.pages);\n    const navs = pages.map(key => {\n        const page = data.pages[key];\n        return {\n                pageKey: key,\n                id: page.id.replace('-page','-link'),\n                dataFor: page.id.replace('-page','-link-tooltip'),\n                toolTip: page[\"nav-tool-tip\"],\n                navButton: page[\"nav-button\"],\n                navRoute: page[\"nav-route\"]\n                }\n    });\n\n    const changeActive = e => {\n       let targetEl = e.currentTarget;\n       let link = targetEl.getElementsByClassName('nav-link')[0];\n       let currentlyActive = Array.from(document.getElementsByClassName('active'));\n        currentlyActive.forEach(el => el.classList.remove('active'));\n        link.classList.add('active');\n    }  \n\n    const pageUrl = window.location.hash;\n\n    const active = {home: pageUrl === '#/' ? ' active' : '',\n                    createAccount: pageUrl === '#/create-account/' ? ' active' :  '',\n                    deposit: pageUrl === '#/deposit/' ? ' active' :  '',\n                    withdraw: pageUrl === '#/withdraw/' ? ' active' :  '',\n                    allData: pageUrl === '#/all-data/' ? ' active' :  ''\n                    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark responsive-nav\" style={{backgroundColor:\"#c41230\", fontWeight: \"500\"}}>\n            <div className=\"container-fluid\" style={{justifyContent:\"left\"}}>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent2\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent2\">\n                    <ul id=\"app-navigation\" className=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-center\" style={{boxSizing:\"border-box\",marginTop:'4px',width:\"100%\"}}>\n                        {navs.map((nav,i)=> <li id={nav.id} key={i} style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for={nav.dataFor}  data-iscapture=\"true\" data-tip={nav.toolTip}><Link to={nav.navRoute} className={\"nav-link\" + active[nav.pageKey]}>{nav.navButton}</Link></li>)}\n                    </ul>\n                </div>\n            </div>\n            {navs.map((nav,i)=> <ReactTooltip id={nav.dataFor} key={i} place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />)}\n        </nav>\n    )\n}\n\nexport default AppNav;","export default __webpack_public_path__ + \"static/media/logo.3d10f139.svg\";","import UserContext from \"../helpers/UserContext\";\nimport UserDBContext from \"../helpers/UserDBContext\";\nimport LanguageContext from '../helpers/LanguageContext';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/userLogin.css';\nimport languages from '../data/languages';\n\nfunction UserLogin() {\n\n    const userDBContext = useContext(UserDBContext);\n\n    const {loggedInUser, logIn, logOut} = useContext(UserContext);\n\n    // Get language context and set language data\n    const {language, changeLanguage} = useContext(LanguageContext);\n    const data = languages[language];\n    const {signOut, signIn} = data.general;\n\n    const getUser = (userDBContext, loggedInUser) => {\n        return userDBContext.users.filter(x=>x.number === loggedInUser)[0];\n    }\n\n    const handleSignOut = () => {\n        if (loggedInUser !== '') {\n            logOut();\n        }\n    }\n\n    const handleSignIn = () => {\n        if (loggedInUser === '' && userDBContext.users.length > 0) {\n            let userNum = userDBContext.users[userDBContext.users.length - 1].number;\n            logIn(userNum);\n        }\n        else {\n            console.log('error!! no user exists to log in');\n        }\n    }\n    \n    const changeActive = () => {\n        let targetEl = document.getElementById('create-account-link');\n        let link = targetEl.getElementsByClassName('nav-link')[0];\n        let currentlyActive = Array.from(document.getElementsByClassName('active'));\n         currentlyActive.forEach(el => el.classList.remove('active'));\n         link.classList.add('active');\n     }  \n\n    const handleChange = e => {\n        const selectBox = document.getElementById(\"language-toggler\");\n        const selectedValue = selectBox.options[selectBox.selectedIndex].value;\n        if (language !== selectedValue) {changeLanguage(selectedValue)}\n    }\n\n    return (\n        <div style={{padding:'10px',fontSize:\"0.8rem\", height: 'auto', margin:'auto 0px', display:'flex',flexWrap:'nowrap',alignItems:'center'}}>\n            {(loggedInUser !== '') ? <div className=\"login-name\">{getUser(userDBContext,loggedInUser).name}</div> : null}\n            <div className='login-link' onClick={loggedInUser !== '' ? handleSignOut : userDBContext.users.length > 0 ? handleSignIn : changeActive}>{loggedInUser !== '' ? signOut : userDBContext.users.length > 0 ? signIn : <Link style={{textDecoration:'none',color:'black', fontSize:'inherit'}} to=\"/create-account/\">{signIn}</Link>}\n            </div>\n            <div className=\"language-toggle-container\">\n                <select id=\"language-toggler\"  className=\"language-toggle\" defaultValue={language} onChange={handleChange} tabIndex=\"0\">\n                    <option value=\"en\">English</option>\n                    <option value=\"es\">Spanish</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default UserLogin;","import { useContext } from \"react\";\nimport LanguageContext from \"../helpers/LanguageContext\";\nimport languages from \"../data/languages\";\nimport '../styles/footer.css';\n\nfunction Footer() {\n\n    // Get language and import data\n    const { language } = useContext(LanguageContext);\n    const data = languages[language]\n\n    // Get items\n    const {links: footerLinks} = data.components.footer;\n\n    return (\n        <div className=\"footer-container\">\n            <div className=\"footer-links\">\n                {footerLinks.map((link,i)=> i === 0 ? <div className=\"fake-link\">{link}</div> : <><div className=\"divider\"></div><div className=\"fake-link\">{link}</div></>)}\n            </div>\n            <div className=\"footer-social\">\n                <div id=\"globalSocialModule\">\n                    <div class=\"social\">\n                        <h5 class=\"social-header\">Connect with us</h5>\n                        <a href=\"#globalSocialModule\" id=\"social_follow_facebook_link\" class=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><g><path d=\"M28.345,0H1.656A1.656,1.656,0,0,0,0,1.656V28.344A1.655,1.655,0,0,0,1.656,30H28.345A1.655,1.655,0,0,0,30,28.344V1.656A1.656,1.656,0,0,0,28.345,0\" fill=\"#fff\"></path><path d=\"M24.6,18.383l0.584-4.527H20.7V10.965c0-1.311.364-2.205,2.244-2.205h2.4V4.709a32.181,32.181,0,0,0-3.492-.178c-3.457,0-5.824,2.109-5.824,5.984v3.34H12.115v4.527h3.908V30H20.7V18.383h3.9Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"#globalSocialModule\" id=\"social_follow_instagram_link\" class=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><path d=\"M26.539,12.69H23.927a9.23,9.23,0,1,1-17.854,0H3.461v12.7a1.154,1.154,0,0,0,1.154,1.152H25.384a1.154,1.154,0,0,0,1.155-1.152V12.69Zm0-8.075a1.153,1.153,0,0,0-1.155-1.153H21.923A1.153,1.153,0,0,0,20.77,4.614V8.076A1.154,1.154,0,0,0,21.923,9.23h3.461a1.154,1.154,0,0,0,1.155-1.153V4.614ZM15,9.23A5.77,5.77,0,1,0,20.77,15,5.769,5.769,0,0,0,15,9.23M26.539,30H3.461A3.462,3.462,0,0,1,0,26.537V3.461A3.461,3.461,0,0,1,3.461,0H26.539A3.461,3.461,0,0,1,30,3.461V26.537A3.462,3.462,0,0,1,26.539,30\" fill=\"#fff\" fill-rule=\"evenodd\"></path></svg>\n                        </a>\n                        <a href=\"#globalSocialModule\" id=\"social_follow_linkedin_link\" class=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.001\" height=\"30\" viewBox=\"0 0 30.001 30\"><g><path d=\"M27.781,0H2.215A2.188,2.188,0,0,0,0,2.16V27.836A2.191,2.191,0,0,0,2.215,30H27.781A2.2,2.2,0,0,0,30,27.836V2.16A2.192,2.192,0,0,0,27.781,0Z\" fill=\"#fff\"></path><path d=\"M4.448,11.246H8.9V25.563H4.448V11.246ZM6.674,4.129a2.58,2.58,0,1,1-2.58,2.58,2.58,2.58,0,0,1,2.58-2.58\" fill=\"#012169\"></path><path d=\"M11.689,11.246h4.268V13.2h0.06a4.681,4.681,0,0,1,4.21-2.311c4.506,0,5.338,2.965,5.338,6.82v7.852H21.118V18.6c0-1.658-.031-3.795-2.314-3.795-2.314,0-2.669,1.809-2.669,3.676v7.082H11.689V11.246Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"#globalSocialModule\" id=\"social_follow_twitter_link\" class=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.914\" height=\"30\" viewBox=\"0 0 36.914 30\"><path d=\"M36.914,3.551a15.169,15.169,0,0,1-4.35,1.193A7.6,7.6,0,0,0,35.9.553a15.187,15.187,0,0,1-4.811,1.838A7.582,7.582,0,0,0,18.18,9.3,21.5,21.5,0,0,1,2.57,1.387,7.579,7.579,0,0,0,4.914,11.5a7.542,7.542,0,0,1-3.432-.946v0.095A7.577,7.577,0,0,0,7.559,18.07a7.621,7.621,0,0,1-3.422.131,7.587,7.587,0,0,0,7.076,5.26,15.194,15.194,0,0,1-9.4,3.241A15.57,15.57,0,0,1,0,26.6,21.439,21.439,0,0,0,11.609,30c13.93,0,21.549-11.541,21.549-21.549q0-.492-0.023-0.981A15.394,15.394,0,0,0,36.914,3.551Z\" fill=\"#fff\"></path></svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer-copyright\">\n                <p class=\"legal-text\">Bad Bank of America, N.A. Member FDIC.</p>\n                <p class=\"legal-text\">©&nbsp;<span id=\"dynamic-copyright-year-update\">2021</span>&nbsp;Bad Bank of America Corporation. <span>All rights reserved.</span></p>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Footer;","import './styles/App.css';\nimport './styles/bootstrap.min.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport Home from './pages/Home.js';\nimport CreateAccount from './pages/CreateAccount.js';\nimport Deposit from './pages/Deposit';\nimport Withdraw from './pages/Withdraw';\nimport AllData from './pages/AllData';\nimport AppNav from './components/AppNav';\nimport logo from './assets/logo.svg';\nimport LanguageContext from './helpers/LanguageContext';\nimport FormContext from './helpers/FormContext';\nimport UserContext from './helpers/UserContext';\nimport UserDBContext from './helpers/UserDBContext';\nimport UserLogin from './components/UserLogin';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const [loggedInUser, setLoggedInUser] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [users, setUsers] = useState([]);\n\n  function addUser(user) {\n    let currentUsers = [...users];\n    currentUsers.push(user);\n    setUsers(currentUsers);\n  }\n\n  function logOut() {\n    setLoggedInUser('');\n  }\n  function logIn(val) {\n    setLoggedInUser(val);\n  }\n  \n  function changeLanguage(lan) {\n    setLanguage(lan);\n  }\n\n  return (\n    <>\n    <HashRouter>\n    <UserDBContext.Provider value={{users, addUser}}>\n    <UserContext.Provider value={{ loggedInUser, logOut, logIn }}>\n        <LanguageContext.Provider value={{language, changeLanguage}}>\n          <div className=\"App\">\n            <div className=\"brand-div\"><img alt=\"\" src={logo} className=\"brand-image\"/></div>\n            <div className=\"login-widget\"><UserLogin loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser}></UserLogin></div>\n            <AppNav />\n            <div className=\"container\" style={{padding:'20px'}}>\n           \n                <FormContext.Provider value={{form:'formik'}}>\n                  \n                      <Route path=\"/\" exact component={Home}></Route>\n                      <Route path=\"/create-account/\" exact component={CreateAccount}></Route>\n                      <Route path=\"/deposit/\" exact component={Deposit}></Route>\n                      <Route path=\"/withdraw/\" exact component={Withdraw}></Route>\n                      <Route path=\"/all-data/\" exact component={AllData}></Route>\n                    \n                </FormContext.Provider>\n             \n            </div>\n            <Footer></Footer>\n          </div>\n          </LanguageContext.Provider>\n          </UserContext.Provider>\n      </UserDBContext.Provider>\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}