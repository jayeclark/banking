{"version":3,"sources":["components/Card.js","helpers/LanguageContext.js","data/languages.js","assets/heroimage.jpeg","helpers/UserContext.js","helpers/UserDBContext.js","helpers/library.js","helpers/validation.js","assets/closeButton.svg","components/Notification.js","components/FormFormik.js","components/FormReactFinal.js","components/FormReactHook.js","helpers/formParser.js","helpers/FormContext.js","components/SignIn.js","pages/Home.js","pages/CreateAccount.js","pages/Deposit.js","pages/Withdraw.js","components/Pagination.js","pages/Transactions.js","pages/AllData.js","components/AppNav.js","assets/logo.svg","components/UserLogin.js","components/Footer.js","components/OptionsNav.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","header","content","form","className","id","alt","src","width","LanguageContext","createContext","language","languages","en","fr","it","de","es","UserContext","UserDBContext","users","getUser","userDBObj","userNum","filter","x","number","length","getUserCount","parseNumber","str","numDigits","Number","replace","toFixed","parseValidation","formFields","validationFunctions","availableArgs","forEach","field","i","validation","v","j","hasOwnProperty","name","functionName","a","k","value","Helpers","UsersExist","useContext","hasInput","val","len","isPositive","toString","search","isNumber","hasTwoSigFigs","isLessThanBalance","balance","replaceAll","isValidEmailFormat","email","RegExp","test","isValidPasswordFormat","pwd","Notification","title","text","type","handleClick","time","parsedContent","onClick","e","closeButton","height","style","margin","padding","seconds","useState","transitionDuration","setStyle","useEffect","setTimeout","fontWeight","FormFormik","formSubmission","submitted","setSubmitted","buttons","success","failure","idRoot","submitHelper","data","general","successTitle","failureTitle","initialFieldValues","notification","manuallyClosed","closed","timeStamp","now","formik","useFormik","initialValues","onSubmit","values","outcome","accountCreated","buttonArr","buttonEl","document","getElementById","innerHTML","altDisplay","createdTime","validate","errors","thisField","item","validationFunction","function","errorMsg","error","itemArgValues","reduce","b","push","handleSubmit","map","display","autoComplete","onChange","handleChange","Object","every","some","dependency","FormReactFinal","getValidators","validators","validatorFunction","itemArgs","undefined","render","submitting","pristine","hasValidationErrors","validator","input","meta","placeholder","touched","disabled","FormReactHook","useForm","mode","register","getValues","setValue","formState","isDirty","console","log","message","setNotification","notificationTime","formParser","formType","fields","submission","formComponent","FormContext","setNewForm","SignIn","logIn","formProvider","forms","user","password","usersWithSameEmail","matchingUser","Home","loggedInUser","pages","cardMsg","card","heroImg","CreateAccount","addUser","pageName","transactions","Deposit","userDBContext","startingBalance","setBalance","balanceMsg","valueIfNotLoggedIn","newBalance","deposit","isNaN","credit","debit","description","typeOfAction","Withdraw","valueIfNoData","withdraw","Pagination","itemsPerPage","maxPages","verbose","minimal","currentPage","onPageChange","pageNum","Math","ceil","startPage","max","pageArray","Array","keys","slice","minWidth","flexGrow","ChartRow","txnDate","Date","toLocaleDateString","Transactions","userDBcontext","cardCols","chartHeader","page","setPage","filteredTransactions","paginate","reverse","txn","targetText","target","textContent","UserChartRow","showPwd","setShowPwd","position","substring","repeat","right","textAlign","border","color","borderRadius","fontSize","AllData","allData","AppNav","navs","key","pageKey","dataFor","toolTip","navButton","navRoute","pageUrl","window","location","hash","active","home","createAccount","backgroundColor","justifyContent","boxSizing","marginTop","nav","link","currentTarget","getElementsByClassName","from","el","classList","remove","add","changeActive","to","place","effect","multiline","UserLogin","logOut","changeLanguage","signOut","signIn","flexWrap","alignItems","textDecoration","defaultValue","selectBox","selectedValue","options","selectedIndex","tabIndex","Footer","components","footer","footerLinks","links","connectCTA","memberFDIC","rightsReserved","href","focusable","xmlns","viewBox","d","fill","fillRule","OptionsNav","flexShrink","zIndex","whiteSpace","App","setLoggedInUser","setLanguage","setUsers","setForm","Provider","currentUsers","lan","logo","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2d174a39.chunk.js","sourcesContent":["import '../styles/Card.css';\n\nfunction Card({image, header, content, form, className, id}) {\n\n    return (\n\n        <div id={id ? id : null} className={className ? \"card \" + className : \"card\"}>\n            {image ?  <img alt=\"\" src={image} width=\"100%\" className=\"card-img-top\" /> : null}\n            {header ?  <div className=\"card-header\"><h4>{header}</h4></div> : null}\n            <div className=\"card-body\">\n                {content ? content : null}\n                {form ? form : null}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;","import { createContext } from \"react\";\n\nconst LanguageContext = createContext({language:'en'});\n\nexport default LanguageContext;","import en from './en.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport de from './de.json';\nimport es from './es.json';\n\nconst languages = {en, fr, it, de, es};\n\nexport default languages;","export default __webpack_public_path__ + \"static/media/heroimage.99862984.jpeg\";","import { createContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport default UserContext;","import { createContext } from \"react\";\n\nconst UserDBContext = createContext({users:[]});\n\nexport default UserDBContext;","import { useContext } from 'react';\nimport UserDBContext from \"./UserDBContext\";\n\nexport const getUser = (userDBObj, userNum) => {\n    const users = userDBObj.users;\n    let user =  userNum !== null ? users.filter(x=>x.number === userNum)[0] :   \n                users.length > 0 ? users[0] : null\n    return user;\n}\n\nexport const getUserCount = (users) => users.length;\n\nexport const UsersExist = () => {\n    const { users } = useContext(UserDBContext);\n    return users.length > 0;\n}\n\nexport const parseNumber = (str, numDigits) => Number(Number(str.replace(',','')).toFixed(numDigits));\n\nexport function parseValidation(formFields, validationFunctions, availableArgs={}) {\n\n    formFields.forEach((field,i)=>{\n\n        field.validation.forEach((v,j)=>{\n\n            // Import validation functions based on reference name\n            if (!v.hasOwnProperty(\"function\") || !v[\"function\"]) {\n                const name = v.functionName;\n                v[\"function\"] = validationFunctions[name];\n            }\n            \n            // Import any additional arguments beyond 'value', as needed\n            if (v.hasOwnProperty(\"args\")) {\n\n                // Add relevant value to each arg object\n                v[\"args\"].forEach((a,k)=>{\n                    if (availableArgs.hasOwnProperty(a.name)) {\n                       formFields[i].validation[j][\"args\"][k].value = availableArgs[a.name];\n                    }\n                })\n            }\n\n        })\n    })\n\n}\n\nexport const Helpers = { getUser, getUserCount, UsersExist, parseNumber, parseValidation}","const hasInput = (val, len=1) => val.length >= len;\n\nconst isPositive = val => val.toString().search(/^-/) === -1;\n\nconst isNumber = val => val.toString().replace(/[,.]/g,'').search(/^(\\d+)$/) > -1;\n\nconst hasTwoSigFigs = val => val.toString().search(/([.]){1,}(\\d){3,}/) === -1;\n\nconst isLessThanBalance = (val, balance) => Number(val.replaceAll(',','')) <= balance ||  val.toString().search(/^(\\d{1,3}){0,1}(,\\d\\d\\d){0,}((\\.)((\\d){0,2})){0,1}$/)  === -1;\n\nconst isValidEmailFormat = email => {\n        const emlRegex = new RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,'i');\n        return emlRegex.test(email);\n    }\n\nconst isValidPasswordFormat = pwd => {\n        const pwdRegex = new RegExp(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{0,}$/,\"i\");\n        return pwdRegex.test(pwd);\n    }\n\nconst validationFunctions = { hasInput, isPositive, isNumber, hasTwoSigFigs, isLessThanBalance, isValidEmailFormat, isValidPasswordFormat };\n\nexport default validationFunctions","export default __webpack_public_path__ + \"static/media/closeButton.47dd7fbc.svg\";","import '../styles/Notification.css';\nimport { useState } from 'react';\nimport Card from './Card.js';\nimport closeButton from '../assets/closeButton.svg';\nimport { useEffect } from 'react/cjs/react.development';\n\nfunction Notification({title, text, type, handleClick, time}) {\n\n    let parsedContent = title ? <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}><h4>{title}</h4>{text}</div></>\n                                : <><div className=\"close-button\"><div className=\"close-x\" onClick={(e) => handleClick()}><img src={closeButton} alt=\"\" height=\"20px\" style={{margin:\"-10px 0px\"}}/></div></div><div style={{padding:\"30px\"}}>{text}</div></>;\n\n    const seconds = time / 1000;\n\n    const [style, setStyle] = useState({width: '100%', transitionDuration: '10ms'})\n\n    useEffect(()=> {\n        setStyle({width: '100%', transitionDuration: '10ms'});\n        setStyle({width: '100%', transitionDuration: seconds + 's'});\n        setTimeout(()=> setStyle({width: '0%', transitionDuration: seconds + 's'}), 10);\n    }, [seconds]);\n\n    return (\n        <div className=\"notification-container\" >\n            <div className={type === 'success' ? \"notification-card green\" : type === 'error' ? \"notification-card red\" : \"notification-card\"}>\n                <Card content={parsedContent} style={{padding: '50px', fontWeight:'500'}}></Card> \n                <div className={type === 'success' ? \"notification-countdown-green\" : type === 'error' ? \"notification-countdown-red\" : \"notification-countdown\"}>\n                    <div className={type === 'success' ? \"countdown-progress-green\" : type === 'error' ? \"countdown-progress-red\" : \"countdown-progress\"} style={style}></div>\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default Notification;","import { useFormik } from 'formik';\nimport '../styles/Formik.css';\nimport Notification from './Notification.js';\nimport { useState } from 'react';\nimport data from '../data/en.json';\nimport { Helpers } from '../helpers/library';\nimport { now } from 'lodash';\n\nfunction FormFormik({ formFields, formSubmission }) {\n\n    const [submitted, setSubmitted] = useState(false);\n\n    const { buttons, success, failure, idRoot, submitHelper } = formSubmission;\n    const { successTitle, failureTitle } = data.general;\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    let notification = { title: successTitle, type: 'success', text: success, time: 5000 };\n    let manuallyClosed = { closed: false, timeStamp: now().toString() };\n    const handleClick = () => {\n        if (manuallyClosed.closed === false) { setSubmitted(false); }\n        manuallyClosed.closed = true;\n        manuallyClosed.timeStamp = now().toString();\n    }\n\n    const formik = useFormik({\n\n        initialValues: initialFieldValues,\n\n        onSubmit: values => {\n\n            const outcome = submitHelper(values);\n            const timeStamp = now().toString();\n            manuallyClosed.closed = false;\n            manuallyClosed.timeStamp = timeStamp;\n\n            if (outcome === 'failure') {\n                const [type, title, text, time] = ['error', failureTitle, failure, notification.time];\n                notification = { type, title, text, time};\n                setSubmitted(true);\n            }\n            else {\n                formSubmission.accountCreated = true;\n                const buttonArr = formSubmission.buttons.filter(x=> x.type=\"submit\")[0];\n                let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n                if (buttonArr.hasOwnProperty(\"altDisplay\")) {buttonEl.innerHTML = buttonArr.altDisplay;}\n                \n                const [type, title, text, time] = ['success', successTitle, success, notification.time];\n                notification = { type, title, text, time };\n                setSubmitted(true);\n            }\n\n            for (let field in formFields) {\n                let element = document.getElementById(formFields[field].name);\n                element.value = '';\n                values[formFields[field].name] = '';\n            }\n\n            setTimeout(()=>{\n                const createdTime = timeStamp;\n                if (manuallyClosed.timeStamp === createdTime && manuallyClosed.closed === false) { setSubmitted(false) }\n            }, notification.time);\n        },\n\n        validate: values => {\n            let errors = {};\n            for (let field in formFields) {\n                const thisField = formFields[field];\n                const validation = thisField.validation;\n\n                for (let item of validation) {\n                    let validationFunction = item.function;\n                    let errorMsg = item.error;\n                    let value = values[thisField.name];\n\n                    if (item.hasOwnProperty(\"args\")) {\n                        let itemArgs = item[\"args\"];\n                        let itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n                        if (itemArgValues.length > 1 && validationFunction(value, ...itemArgValues) === false) { errors[thisField.name] = errorMsg }\n                        else if (itemArgValues.length === 1 && validationFunction(value, itemArgValues[0]) === false) { errors[thisField.name] = errorMsg }\n                    }\n                    else {\n                        if(validationFunction(value) === false) { errors[thisField.name] = errorMsg }\n                    }\n \n                }\n\n            }\n\n            return errors;\n\n        }\n\n    })\n\n    return (\n        <form id={idRoot} className=\"form-formik\" onSubmit={formik.handleSubmit}>\n            {submitted === true ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={handleClick} time={notification.time}></Notification> : null}\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <div className='field-name'><b>{field.display}</b></div>\n                        <div className='input-lockup'>\n                            <input type={field.type} autoComplete=\"off\" id={field.name} name={field.name} onChange={formik.handleChange} value={formik.values[field.name]} className={formik.errors[field.name] && formik.values[field.name] ? 'input-visible-error' : formik.errors[field.name] ? 'input-error' : formik.values[field.name] ? 'input-visible-noerror' : 'input-noerror'} />\n                            {formik.errors[field.name] ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{formik.errors[field.name]}</div> : null }\n                        </div>\n                    </div>\n                )\n            })}\n            <div className='buttons'>\n                <div className='button-buffer'></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(formik.errors).every(x=>x==='') && Object.values(formik.values).some(x=> x !=='') ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>\n                                {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                            </button>\n                        </div>\n                    )\n                    \n                })}\n            </div>\n        </form>\n    )\n\n}\n\nexport default FormFormik;","import { Form, Field } from 'react-final-form';\nimport Notification from './Notification';\nimport { useState } from 'react';\nimport data from '../data/en.json';\nimport { Helpers } from '../helpers/library';\nimport '../styles/ReactFinal.css';\nimport { now } from 'lodash';\n\nfunction FormReactFinal({formFields, formSubmission}) {\n\n    const [submitted, setSubmitted] = useState(false);\n\n    const { buttons, success, failure, idRoot, submitHelper } = formSubmission;\n    const { successTitle, failureTitle } = data.general;\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    let notification = { title: successTitle, type: 'success', text: success, time: 5000 };\n    let manuallyClosed = { closed: false, timeStamp: null };\n    const handleClick = () => {\n        if (manuallyClosed.closed === false) {setSubmitted(false);}\n        manuallyClosed.closed = true;\n    }\n\n    const getValidators = (field, value) => {\n        const validators = [];\n        const validation = field.validation;\n        for (let item of validation) {\n            let validatorFunction = item.function;\n            let errorMsg = item.error;\n            let itemArgValues = [];\n            if (item.hasOwnProperty(\"args\")) {\n                let itemArgs = item[\"args\"];\n                itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n            }\n\n            const thisValidator = (value='') => {\n                if (itemArgValues.length > 1) {\n                    return validatorFunction(value, ...itemArgValues) ? undefined : errorMsg\n                }\n                else if (itemArgValues.length === 1) {\n                    return validatorFunction(value, itemArgValues[0]) ? undefined : errorMsg\n                }\n                return validatorFunction(value) ? undefined : errorMsg;\n            }\n            validators.push(thisValidator);\n        }\n        return validators;\n    }\n\n    const composeValidators = (validators) => (value) => {\n        let reduced = validators.reduce((error, validator) => error || validator(value), undefined);\n        return reduced;\n    }\n        \n\n    const onSubmit = values => {\n\n        const outcome = submitHelper(values);\n\n        const timeStamp = now();\n        manuallyClosed.closed = false;\n        manuallyClosed.timeStamp = timeStamp.toString();\n\n        if (outcome === 'failure') {\n            const [type, title, text, time] = ['error', failureTitle, failure, notification.time];\n            notification = { type, title, text, time };\n            setSubmitted(true);\n        }\n        else {\n            formSubmission.accountCreated = true;\n            const buttonArr = formSubmission.buttons.filter(x => x.type=\"submit\")[0];\n            let buttonEl = document.getElementById(idRoot+\"-\"+buttonArr.name);\n            if (buttonArr.hasOwnProperty(\"altDisplay\")) { buttonEl.innerHTML = buttonArr.altDisplay; }\n            \n            const [type, title, text, time] = ['success', successTitle, success, notification.time];\n            notification = { type, title, text, time};\n            setSubmitted(true);\n        }\n\n        for (let field in formFields) {\n            let element = document.getElementById(formFields[field].name);\n            element.value = '';\n            values[formFields[field].name] = '';\n        }\n\n        setTimeout(()=>{\n            const createdTime = timeStamp;\n            if (manuallyClosed.closed === false && manuallyClosed.timeStamp === createdTime) { setSubmitted(false) }\n        }, notification.time);\n    \n    }\n\n    return (\n        <Form \n            onSubmit={onSubmit}\n            initialValues={initialFieldValues}\n            render={({ handleSubmit, submitting, pristine, values, hasValidationErrors }) => (\n                <form id={idRoot} className=\"react-final\" onSubmit={handleSubmit}>\n                    {submitted === true ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={handleClick} time={notification.time}></Notification> : null}\n                    {formFields.map((field,i)=> {\n                        return (\n                            <Field key={i} name={field.name} validate={composeValidators(getValidators(field, values[field.name]))}>\n                                {({ input, meta }) => (\n                                    <div key={i} className=\"input-container\">\n                                        <div className=\"field-name\"><b>{field.display}</b></div>\n                                        <div className=\"input-lockup\">\n                                            <input {...input} type={field.type} autoComplete=\"off\" id={field.name} name={field.name} placeholder={field.display} className={meta.error && input.value ? 'input-visible-error' : meta.error ? 'input-error ' : input.value ? 'input-visible-noerror' : 'input-noerror'}/>\n                                            {meta.error && meta.touched && <span className=\"error\">{meta.error}</span>}\n                                        </div>\n                                    </div>\n                                )}\n                            </Field>\n\n                        )\n                    })}\n                    <div className=\"buttons\">\n                        <div className=\"button-buffer\"></div>\n                        {buttons.map((buttonEl,i)=>{\n                            return (\n                                <div key={i} className=\"button-container\">\n                                    <button \n                                        id={idRoot + \"-\" + buttonEl.name} \n                                        type={buttonEl.type}\n                                        disabled={submitting || pristine || hasValidationErrors}\n                                        className={buttonEl.className}\n                                    >\n                                        {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                                    </button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </form>\n            )}\n        />\n    )\n\n}\n\nexport default FormReactFinal;","import { useForm } from 'react-hook-form';\nimport '../styles/ReactHook.css';\nimport Notification from './Notification.js';\nimport { useState } from 'react';\nimport data from '../data/en.json';\nimport { now } from 'lodash';\nimport { Helpers } from '../helpers/library';\n\nfunction FormReactHook({formFields, formSubmission}) {\n\n    const [submitted, setSubmitted] = useState(false);\n    const { register, handleSubmit, getValues, setValue, formState: { errors, isDirty } } = useForm({\n        mode: 'onChange',\n      });\n\n    const { buttons, success, failure, idRoot, submitHelper } = formSubmission;\n    const { successTitle, failureTitle } = data.general; \n\n    console.log(Object.values(errors).every(x => x.message === '' ));\n    console.log(Object.values(getValues()));\n    console.log(Object.values(getValues()).some(x => x !== ''));\n\n    const initialFieldValues = {};\n    for (let field in formFields) {\n        const fieldName = formFields[field].name;\n        initialFieldValues[fieldName] = '';\n    }\n\n    const [notification, setNotification] = useState({ title: successTitle, type: 'success', text: success, time: 5000 })\n    let manuallyClosed = { closed: false, timeStamp: now().toString() };\n    const handleClick = () => {\n        if (manuallyClosed.closed === false) { setSubmitted(false); }\n        manuallyClosed.closed = true;\n    }\n\n    const getValidators = (field, value) => {\n        const validators = [];\n        const validation = field.validation;\n        for (let item of validation) {\n            let validatorFunction = item.function;\n            let errorMsg = item.error;\n            let itemArgValues = [];\n            if (item.hasOwnProperty(\"args\")) {\n                let itemArgs = item[\"args\"];\n                itemArgValues = itemArgs.reduce((a,b) => {a.push(b.value); return a;},[]);\n            }\n\n            const thisValidator = (value='') => {\n                if (itemArgValues.length > 1) {\n                    return validatorFunction(value, ...itemArgValues) ? undefined : errorMsg\n                }\n                else if (itemArgValues.length === 1) {\n                    return validatorFunction(value, itemArgValues[0]) ? undefined : errorMsg\n                }\n                return validatorFunction(value) ? undefined : errorMsg;\n            }\n            validators.push(thisValidator);\n        }\n        return validators;\n    }\n\n    const composeValidators = (validators, value) => (value) => {\n        let reduced = validators.reduce((error, validator) => error || validator(value), undefined);\n        return reduced;\n    }\n\n    const onSubmit = values => {\n\n        const outcome = submitHelper(values);\n        const timeStamp = now().toString();\n        const notificationTime = notification.time;\n        manuallyClosed.closed = false;\n        manuallyClosed.timeStamp = timeStamp;\n\n        if (outcome === 'failure') {\n            const [type, title, text, time] = ['error', failureTitle, failure, notification.time];\n            setNotification({ type, title, text, time });\n            setSubmitted(true);\n        }\n        else {\n            const [type, title, text, time] = ['success', successTitle, success, notification.time];\n            setNotification({ type, title, text, time });\n            setSubmitted(true);\n        }\n\n        for (let field in formFields) {\n            let element = document.getElementById(formFields[field].name);\n            element.value = '';\n            setValue(formFields[field].name, '');\n        }\n\n        console.log(getValues());\n\n        setTimeout(()=>{\n            const createdTime = timeStamp;\n            if (manuallyClosed.closed === false && manuallyClosed.timeStamp === createdTime) { setSubmitted(false) }\n        }, notificationTime);\n\n    }\n\n    return (\n        <form id={idRoot} className=\"react-hook\" onSubmit={handleSubmit(onSubmit)}>\n            {submitted === true ? <Notification title={notification.title} type={notification.type} text={notification.text} handleClick={handleClick} time={notification.time}></Notification> : null}\n            {formFields.map((field,i)=>{\n                return (\n                    <div key={i} className=\"input-container\">\n                        <div className='field-name'><b>{field.display}</b></div>\n                        <div className='input-lockup'>\n                            <input \n                                type={field.type} \n                                autoComplete=\"off\" \n                                id={field.name} \n                                name={field.name} \n                                className={errors.hasOwnProperty(field.name) && getValues()[field.name] ? 'input-visible-error' : errors.hasOwnProperty(field.name) ? 'input-error' : getValues()[field.name] ?  'input-visible-noerror' : 'input-noerror'} \n                                {...register(field.name, { validate: composeValidators(getValidators(field, getValues()[field.name]), getValues()[field.name]) })} />\n                            {errors.hasOwnProperty(field.name) ? <div id={idRoot + \"-\" + field.name + \"Error\"} className=\"error\">{errors[field.name].message}</div> : null}\n                        </div>\n                    </div>\n                )\n            })}\n            <div className=\"buttons\">\n                <div className=\"button-buffer\"></div>\n                {buttons.map((buttonEl,i)=>{\n                    return (\n                        <div key={i} className=\"button-container\">\n                            <button id={idRoot + \"-\" + buttonEl.name} className={Object.values(errors).length === 0 && (isDirty || Object.values(getValues()).length > 0) ? buttonEl.className : buttonEl.className + ' disabled'} type={buttonEl.type}>\n                                {buttonEl.dependency && Helpers[buttonEl.dependency]() ? buttonEl.altDisplay : buttonEl.display}\n                            </button>\n                        </div>\n                    )\n                })}\n            </div>\n        </form>\n    )\n\n}\n\nexport default FormReactHook;","import FormFormik from '../components/FormFormik';\nimport FormReactFinal from '../components/FormReactFinal';\nimport FormReactHook from '../components/FormReactHook';\n\nfunction formParser(formType, fields, submission) {\n\n    let formComponent;\n\n    switch (formType) {\n\n        case 'formik':\n            formComponent = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik> ;\n            break;\n\n        case 'reactFinal':\n            formComponent = <FormReactFinal \n                        formFields={fields} \n                        formSubmission={submission}  >\n                    </FormReactFinal>;\n            break;\n\n        case 'reactHook':\n            formComponent = <FormReactHook \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormReactHook>;\n            break;\n        \n        default:\n            formComponent = <FormFormik \n                        formFields={fields} \n                        formSubmission={submission} >\n                    </FormFormik>;\n    }\n    \n    return formComponent;\n    \n}\n\nexport default formParser;","import { createContext } from \"react\";\n\nconst FormContext = createContext({form: null, setNewForm: null});\n\nexport default FormContext;","import { useContext } from 'react';\nimport { parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport formParser from '../helpers/formParser';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nexport function SignIn() {\n\n        // Get user database, logged in user, form preference, and language\n        const { users } = useContext(UserDBContext);\n        const { logIn } = useContext(UserContext);\n        const { form: formProvider } = useContext(FormContext);\n        const { language } = useContext(LanguageContext);\n    \n        // Load page content\n        const { formSubmission, formFields } = languages[language].forms['signIn'];\n        const content = <span className=\"card-content\"></span>;\n     \n        // Parse validation functions\n        parseValidation(formFields, validationFunctions);\n    \n        // Add submission instructions\n        const submitHelperFunc = (values) => {\n    \n            const user = {\n                email: values.email,\n                password: values.password,\n             };\n    \n            let usersWithSameEmail = users.filter(user => user.email === values.email);\n            \n            if (usersWithSameEmail.length === 0) { return 'failure'; }\n            else {\n                let matchingUser = usersWithSameEmail[0];\n                let userPwd = matchingUser.password;\n                if (userPwd !== user.password) {\n                    return 'failure';\n                }\n                else {\n                    logIn(matchingUser.number);\n                    return 'success';\n                }\n                return 'failure';\n            }\n    \n        }\n        formSubmission.submitHelper = submitHelperFunc;\n    \n        // Create form component\n        const form = formParser(formProvider, formFields, formSubmission);\n    \n        return (\n            <Card id=\"sign-in-card\" header=\"Sign In to Your Account\" content={content} form={form}></Card>\n        )\n    \n\n\n}","import { useContext } from 'react';\nimport Card from '../components/Card.js';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages';\nimport heroImg from '../assets/heroimage.jpeg';\nimport UserContext from '../helpers/UserContext.js';\nimport UserDBContext from '../helpers/UserDBContext.js';\nimport { SignIn } from '../components/SignIn.js';\n\nfunction Home() {\n\n    // Get language preference and import content data based on it\n    const { language } = useContext(LanguageContext);\n\n    const { loggedInUser } = useContext(UserContext);\n    const { users } = useContext(UserDBContext);\n    console.log(loggedInUser);\n    \n    // Load page content\n    const pageName = \"home\";\n    let { header, card: { cardMsg }, id } = languages[language].pages[pageName];\n    const [content, image] = [<span>{ cardMsg }</span>, heroImg];\n\n    if (loggedInUser) { header += \", \" + users[loggedInUser]};\n    \n    return (\n        <div className=\"home-splash\">  \n            { loggedInUser ? null : users.length > 0 ? <SignIn /> : null} \n            <Card id={ id } image={ image } header={ header } content={ content }></Card>\n        </div>\n        \n    )\n\n}\n\nexport default Home;\n","import { useContext } from 'react';\nimport { getUserCount, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport formParser from '../helpers/formParser';\nimport { now } from 'lodash';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nfunction CreateAccount() {\n\n    // Get user database, logged in user, form preference, and language\n    const { users, addUser } = useContext(UserDBContext);\n    const { logIn } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n\n    // Load page content\n    const pageName = 'createAccount';\n    const { header, card: {cardMsg}, id } = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <span className=\"card-content\">{ cardMsg }</span>;\n \n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n        const user = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            transactions: [],\n            balance: 0,\n            time: now(),\n            number: getUserCount(users) + 1,\n         };\n\n        let usersWithSameEmail = users.filter(user => user.email === values.email);\n        \n        if (usersWithSameEmail.length > 0) { return 'failure'; }\n        else {\n            addUser(user);\n            logIn(user.number);\n            return 'success';\n        }\n\n    }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n        <Card id={id} header={header} content={content} form={form}></Card>\n    )\n\n}\n\nexport default CreateAccount;","import { useContext, useState } from 'react';\nimport formParser from '../helpers/formParser';\nimport { getUser, parseNumber, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport { now } from 'lodash';\nimport Card from '../components/Card';\nimport FormContext from '../helpers/FormContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport UserContext from '../helpers/UserContext';\nimport UserDBContext from '../helpers/UserDBContext';\nimport languages from '../data/languages.js';\n\nfunction Deposit() {\n\n    // Get user database, logged in user, form preference, and language preference\n    const userDBContext = useContext(UserDBContext);\n    const { loggedInUser } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n\n    // Determine starting balance, and set local component balance\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Load page content\n    const pageName = \"deposit\";\n    const { header, card: { cardMsg, balanceMsg }, id, valueIfNotLoggedIn } = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <><span className=\"card-content\">{ cardMsg }</span><h4 className=\"card-balance-msg\">{ balanceMsg }{ balance.toFixed(2) }</h4></>;\n\n    // Parse validation functions\n    parseValidation(formFields, validationFunctions);\n    console.log(\"fields: \" , formFields);\n \n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === null) {return 'failure'}\n            else {\n                let newBalance = balance + parseNumber(values.deposit, 2);\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push(\n                    {   time: now(), \n                        credit: parseNumber(values.deposit, 2), \n                        debit: null, \n                        description: formSubmission.typeOfAction, \n                        newBalance \n                    })\n                return 'success';\n            }\n    \n        }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            {loggedInUser ? <Card id={id} header={header} content={content} form={form}></Card> :\n                            <Card id={id} header={header} content={valueIfNotLoggedIn} form={null}></Card>}\n            </>\n    )\n\n}\n\nexport default Deposit;","import { useContext, useState } from 'react';\nimport { now } from 'lodash';\nimport formParser from '../helpers/formParser';\nimport { getUser, parseNumber, parseValidation } from '../helpers/library';\nimport validationFunctions from '../helpers/validation';\nimport Card from '../components/Card';\nimport UserDBContext from '../helpers/UserDBContext';\nimport FormContext from '../helpers/FormContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\n\nfunction Withdraw() {\n\n    // Get user database, logged in user, form provider, and language\n    const userDBContext = useContext(UserDBContext);\n    const { loggedInUser } = useContext(UserContext);\n    const { form: formProvider } = useContext(FormContext);\n    const { language } = useContext(LanguageContext);\n\n    // Get logged in user number, determine starting balance, and set local balance state\n    const startingBalance = loggedInUser ? getUser(userDBContext,loggedInUser).balance : 0.00;\n    const [balance, setBalance] = useState(startingBalance);\n\n    // Load page content\n    const pageName = \"withdraw\";\n    const { header, card: {cardMsg, balanceMsg }, id, valueIfNoData, valueIfNotLoggedIn} = languages[language].pages[pageName];\n    const { formSubmission, formFields } = languages[language].forms[pageName];\n    const content = <><span className=\"card-content\">{cardMsg}</span><h4 className=\"card-balance-msg\">{ balanceMsg }{ balance.toFixed(2) }</h4></>;\n\n    // Parse validation functions\n    const availableArgs = { balance };\n    parseValidation(formFields, validationFunctions, availableArgs);\n\n    // Add submission instructions\n    const submitHelperFunc = (values) => {\n\n            if (loggedInUser === '') {return 'failure'}\n            else {\n                let newBalance = balance - parseNumber(values.withdraw, 2);\n                if (isNaN(newBalance)) {return 'failure'};\n                setBalance(newBalance);\n                getUser(userDBContext,loggedInUser).balance = newBalance;\n                getUser(userDBContext,loggedInUser).transactions.push({ time: now(), \n                                                                        credit: null, \n                                                                        debit: parseNumber(values.withdraw, 2), \n                                                                        description: formSubmission.typeOfAction, \n                                                                        newBalance\n                                                                      })\n                return 'success';\n            }\n    \n        }\n    formSubmission.submitHelper = submitHelperFunc;\n\n    // Create form component\n    const form = formParser(formProvider, formFields, formSubmission);\n\n    return (\n            <>\n            {   loggedInUser !== '' && balance > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                loggedInUser !== ''  ? <Card id={ id } header={ header } content={ <><p>{ valueIfNoData }</p><h4>{ balanceMsg }{ balance.toFixed(2) }</h4></> } form=\"\"></Card> : \n                                       <Card id={ id } header={ header } content={ <p>{ valueIfNotLoggedIn }</p> } form=\"\"></Card> }\n            </>\n    )\n\n}\n\nexport default Withdraw;","import '../styles/Pagination.css';\n\nexport function paginate(data, itemsPerPage, currentPage) {\n    return data.slice(currentPage, currentPage + itemsPerPage)\n}\n\nexport function Pagination({ data,  itemsPerPage, maxPages, verbose, minimal, currentPage, onPageChange }) {\n\n    if (data.length <= itemsPerPage) {return null;}\n    const pageNum = Math.ceil(data.length / itemsPerPage);\n\n    if (maxPages % 2 === 0 && maxPages + 1 <= pageNum) {\n        maxPages++;\n    }\n    else if (maxPages > pageNum) {\n        maxPages = pageNum;\n    }\n\n    console.log('v: ', verbose);\n    console.log('pagnum: ' +pageNum);\n    const startPage = maxPages < pageNum ? Math.max(currentPage - ((maxPages - 1) / 2), 0) : 0;\n    const pageArray = [...Array(maxPages + 1).keys()].slice(1);\n\n    return (\n        <div className=\"page-button-container\" style={minimal ? {width: '100%'} : null}>\n            {pageNum > 5 ? <button id=\"first\" disabled={currentPage === 0 ? true : false}>{verbose === \"yes\" ? \"First Page\" : \"<<\"}</button> : null}\n            {pageNum > 1 ? <button id=\"previous\" className={currentPage === startPage ? \"page-button disabled\" : \"page-button\"} type=\"button\" onClick={onPageChange} disabled={currentPage === startPage ? true : false}>{verbose === \"yes\" ? \"Previous Page\" : \"<\"}</button> : null}\n            {minimal === false ? pageArray.map((x,i)=><button className={currentPage === i ? \"page-button disabled current-page\" : \"page-button\"} key={i} onClick={onPageChange} disabled={currentPage === i ? true : false}>{i+1}</button>) : <div style={{minWidth: \"40px\", flexGrow: 1}}></div>}\n            {pageNum > 1 ? <button id=\"previous\" className={currentPage === startPage + maxPages - 1 ? \"page-button disabled\" : \"page-button\"} type=\"button\" onClick={onPageChange} disabled={currentPage === startPage + maxPages - 1 ? true : false}>{verbose === \"yes\" ? \"Next Page\" : \">\"}</button> : null}\n            {pageNum > 3 ? <button id=\"last\" className={currentPage === maxPages - 1 ? \"page-button disabled\" : \"page-button\"}>{verbose === \"yes\" ? \"Last Page\" : \">>\"}</button> : null}\n        </div>\n    )\n\n}\n","import { useContext, useState } from 'react';\nimport { getUser } from '../helpers/library';\nimport Card from '../components/Card';\nimport { Pagination, paginate } from '../components/Pagination';\nimport UserDBContext from '../helpers/UserDBContext';\nimport UserContext from '../helpers/UserContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\nimport '../styles/Transactions.css';\n\nfunction Transactions() {\n\n    // Get user database\n    const userDBcontext = useContext(UserDBContext);\n\n    // Get logged in user number\n    const {loggedInUser} = useContext(UserContext);\n\n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    let transactions = getUser(userDBcontext,loggedInUser) ? getUser(userDBcontext,loggedInUser).transactions : [];\n\n    // Load page content\n    const {header, card: {cardCols}, id, valueIfNoData, valueIfNotLoggedIn} = data.pages.transactions;\n    const chartHeader = <div className=\"data-grid-header-row\"><div className=\"align-left\"><b>{cardCols[0]}</b></div><div className=\"data-grid-description align-left\"><b>{cardCols[1]}</b></div><div className=\"align-right\"><b>{cardCols[2]}</b></div><div className=\"align-right\"><b>{cardCols[3]}</b></div><div className=\"align-right\"><b>{cardCols[4]}</b></div></div>;\n    const itemsPerPage = 5;\n    const [page, setPage] = useState(0);\n    const handleSetPage = (e) => {\n        const targetText = e.target.textContent;\n        const pageNum = Math.ceil(transactions.length / itemsPerPage);\n        if (targetText === \"First Page\" || targetText === \"<<\") { setPage(0) } \n        else if (targetText === \"Previous Page\" || targetText === \"<\") { setPage(page - 1) }\n        else if (targetText === \"Next Page\" || targetText === \">\") { setPage(page + 1) }\n        else if (targetText === \"Last Page\" || targetText === \">>\") { setPage(pageNum - 1) }\n        else {setPage(Number(targetText) - 1)}\n    };\n    const filteredTransactions = paginate(transactions, itemsPerPage, page);\n\n    const content = <div className=\"data-grid\">\n                        {chartHeader}\n                        {filteredTransactions.reverse().map((txn,i)=><ChartRow key={i} data={txn}></ChartRow>)}\n                        <Pagination data={transactions} maxPages={5} verbose=\"no\" itemsPerPage={itemsPerPage} minimal={false} currentPage={page} onPageChange={handleSetPage} />\n                    </div>;\n    let form = '';\n\n\n    return (\n        <>\n        {loggedInUser !== '' && transactions.length > 0 ? <Card id={id} header={header} content={content} form={form}></Card> :\n                loggedInUser !== ''  ? <Card id={id} header={header} content={ valueIfNoData || content } form={form}></Card> : \n                <Card id={id} header={header} content={ valueIfNotLoggedIn || content } form={form}></Card>}\n        </>\n    )\n\n}\n\nfunction ChartRow({data}) {\n    const txnDate = new Date(data.time);\n    return (\n        <div className=\"data-grid-row\"><div className=\"align-left\">{txnDate.toLocaleDateString()}</div><div className=\"data-grid-description align-left\">{data.description}</div>{data.credit !== null ? <div className=\"align-right\">${data.credit.toFixed(2)}</div> : <div></div>}{data.debit !== null ? <div className=\"align-right\">-${data.debit.toFixed(2)}</div> : <div></div>}<div className=\"align-right\">${data.newBalance.toFixed(2)}</div></div>\n    )\n}\n\nexport default Transactions;","import { useContext, useState } from 'react';\nimport Card from '../components/Card';\nimport UserDBContext from '../helpers/UserDBContext';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\nimport '../styles/AllData.css';\n\nfunction AllData() {\n\n    // Get user database\n    const { users } = useContext(UserDBContext);\n\n    // Get language preference and import content data based on it\n    const { language } = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Load page content\n    const { header, card: {cardCols}, id, valueIfNoData } = data.pages.allData;\n    const chartHeader = <><div className=\"align-left\"><b>{cardCols[0]}</b></div><div className=\"align-left\"><b>{cardCols[1]}</b></div><div className=\"align-left\"><b>{cardCols[2]}</b></div><div className=\"align-left\"><b>{cardCols[3]}</b></div></>;\n\n    const content = <div className=\"user-data-grid\">{chartHeader}{users.map((user,i)=><UserChartRow key={i} data={user}></UserChartRow>)}</div>;\n    let form = '';\n\n    return (\n        <>\n        {users.length > 0 ? <Card id={ id } header={ header } content={ content } form={ form }></Card> :\n                <Card id={ id } header={ header } content={ valueIfNoData || content } form={ form }></Card>}\n        </>\n    )\n\n}\n\nfunction UserChartRow({data}) {\n    const txnDate = new Date(data.time);\n    const [showPwd, setShowPwd] = useState(false);\n\n    const togglePwd = () => {\n\n        if (showPwd === false) {\n            setShowPwd(true);\n        }\n        else if (showPwd === true) {\n            setShowPwd(false);\n        }\n\n    }\n\n    const maskPwd = (pwd) => pwd.substring(0,1) + '*'.repeat(pwd.length - 1);\n\n    return (\n        <><div className=\"align-left\">{ txnDate.toLocaleDateString() }</div><div className=\"align-left\">{ data.name }</div><div className=\"align-left\">{ data.email }</div><div style={{position:\"relative\"}} className=\"align-left\"><span style={{display:\"inline-block\",padding:\"0px 3px 0px 0px\"}}>{ showPwd ? data.password : maskPwd(data.password) }</span><span onClick={ togglePwd } style={{ display: \"inline-block\", padding:\"2px\", position: \"absolute\", right: \"0px\", minWidth: \"39px\", textAlign:\"center\", margin:\"2px\", border:\"1px solid #ddd\", color:\"#666\", borderRadius:\"5px\", fontSize:\"0.7em\" }}>{ showPwd ? \"Hide\" : \"Show\" }</span></div></>\n    )\n}\n\nexport default AllData;","import {Link} from 'react-router-dom';\nimport {useContext} from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport '../styles/AppNav.css';\nimport LanguageContext from '../helpers/LanguageContext';\nimport languages from '../data/languages.js';\n\nfunction AppNav() {\n    \n    // Get language preference and import content data based on it\n    const {language} = useContext(LanguageContext);\n    const data = languages[language];\n\n    // Build list of nav links\n    const pages = Object.keys(data.pages);\n    const navs = pages.map(key => {\n        const page = data.pages[key];\n        return {\n                pageKey: key,\n                id: page.id.replace('-page','-link'),\n                dataFor: page.id.replace('-page','-link-tooltip'),\n                toolTip: page[\"nav-tool-tip\"],\n                navButton: page[\"nav-button\"],\n                navRoute: page[\"nav-route\"]\n                }\n    });\n\n    const changeActive = e => {\n       let targetEl = e.currentTarget;\n       let link = targetEl.getElementsByClassName('nav-link')[0];\n       let currentlyActive = Array.from(document.getElementsByClassName('active'));\n        currentlyActive.forEach(el => el.classList.remove('active'));\n        link.classList.add('active');\n    }  \n\n    const pageUrl = window.location.hash;\n\n    const active = {home: pageUrl === '#/' ? ' active' : '',\n                    createAccount: pageUrl === '#/create-account/' ? ' active' :  '',\n                    deposit: pageUrl === '#/deposit/' ? ' active' :  '',\n                    withdraw: pageUrl === '#/withdraw/' ? ' active' :  '',\n                    transactions: pageUrl === '#/transactions/' ? ' active' :  '',\n                    allData: pageUrl === '#/all-data/' ? ' active' :  ''\n                    }\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark responsive-nav\" style={{backgroundColor:\"#c41230\", fontWeight: \"500\"}}>\n            <div className=\"container-fluid\" style={{justifyContent:\"left\"}}>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent2\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent2\">\n                    <ul id=\"app-navigation\" className=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-center\" style={{boxSizing:\"border-box\",marginTop:'4px',width:\"100%\"}}>\n                        {navs.map((nav,i)=> <li id={nav.id} key={i} style={{padding:\"0px 20px\"}} onClick={e=> changeActive(e)} className=\"nav-item\" data-for={nav.dataFor}  data-iscapture=\"true\" data-tip={nav.toolTip}><Link to={nav.navRoute} className={\"nav-link\" + active[nav.pageKey]}>{nav.navButton}</Link></li>)}\n                    </ul>\n                </div>\n            </div>\n            {navs.map((nav,i)=> <ReactTooltip id={nav.dataFor} key={i} place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />)}\n        </nav>\n    )\n}\n\nexport default AppNav;","export default __webpack_public_path__ + \"static/media/logo.3d10f139.svg\";","import UserContext from \"../helpers/UserContext\";\nimport UserDBContext from \"../helpers/UserDBContext\";\nimport LanguageContext from '../helpers/LanguageContext';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/UserLogin.css';\nimport languages from '../data/languages';\n\nfunction UserLogin() {\n\n    const userDBContext = useContext(UserDBContext);\n\n    const { loggedInUser, logIn, logOut } = useContext(UserContext);\n\n    // Get language context and set language data\n    const { language, changeLanguage } = useContext(LanguageContext);\n    const data = languages[language];\n    const { signOut, signIn } = data.general;\n\n    const getUser = (userDBContext, loggedInUser) => {\n        return userDBContext.users.filter(x=>x.number === loggedInUser)[0];\n    }\n\n    const handleSignOut = () => {\n        if (loggedInUser !== '') {\n            logOut();\n        }\n    }\n\n    const handleSignIn = () => {\n        if (loggedInUser === '' && userDBContext.users.length > 0) {\n            let userNum = userDBContext.users[userDBContext.users.length - 1].number;\n            logIn(userNum);\n        }\n        else {\n            console.log('error!! no user exists to log in');\n        }\n    }\n    \n    const changeActive = () => {\n        let targetEl = document.getElementById('create-account-link');\n        let link = targetEl.getElementsByClassName('nav-link')[0];\n        let currentlyActive = Array.from(document.getElementsByClassName('active'));\n         currentlyActive.forEach(el => el.classList.remove('active'));\n         link.classList.add('active');\n     }  \n\n    const handleChange = e => {\n        const selectBox = document.getElementById(\"language-toggler\");\n        const selectedValue = selectBox.options[selectBox.selectedIndex].value;\n        if (language !== selectedValue) {changeLanguage(selectedValue)}\n    }\n\n    return (\n        <div style={{padding:'10px',fontSize:\"0.8rem\", height: 'auto', margin:'auto 0px', display:'flex',flexWrap:'nowrap',alignItems:'center'}}>\n            {(loggedInUser !== '') ? <div className=\"login-name\">{getUser(userDBContext,loggedInUser).name}</div> : null}\n            <div className='login-link' onClick={loggedInUser !== '' ? handleSignOut : null}>{loggedInUser !== '' ? signOut : userDBContext.users.length > 0 ? <Link style={{textDecoration:'none',color:'black', fontSize:'inherit'}} to=\"/\">{signIn}</Link>: <Link style={{textDecoration:'none',color:'black', fontSize:'inherit'}} to=\"/create-account/\">{signIn}</Link>}\n            </div>\n            <div className=\"language-toggle-container\">\n                <select id=\"language-toggler\"  className=\"language-toggle\" defaultValue={language} onChange={handleChange} tabIndex=\"0\">\n                    <option value=\"en\">English</option>\n                    <option value=\"es\">Spanish</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default UserLogin;","import { useContext} from \"react\";\nimport LanguageContext from \"../helpers/LanguageContext\";\nimport languages from \"../data/languages\";\nimport '../styles/Footer.css';\n\nfunction Footer() {\n\n    // Get language and import data\n    const { language } = useContext(LanguageContext);\n    const data = languages[language]\n\n    // Get items\n    const {links: footerLinks, connectCTA, memberFDIC, rightsReserved} = data.components.footer;\n\n    return (\n        <div className=\"footer-container\">\n            <div className=\"footer-links\">\n                {footerLinks.map((link,i) => <div key={i} className=\"link-container\">{i !== 0 ? <div className=\"divider\"></div> : null}<div className=\"fake-link\">{link}</div></div>)}\n            </div>\n            <div className=\"footer-social\">\n                <div id=\"globalSocialModule\">\n                    <div className=\"social\">\n                        <h5 className=\"social-header\">{connectCTA}</h5>\n                        <a href=\"https://www.facebook.com/BankofAmerica/\" target=\"_blank\" id=\"social_follow_facebook_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><g><path d=\"M28.345,0H1.656A1.656,1.656,0,0,0,0,1.656V28.344A1.655,1.655,0,0,0,1.656,30H28.345A1.655,1.655,0,0,0,30,28.344V1.656A1.656,1.656,0,0,0,28.345,0\" fill=\"#fff\"></path><path d=\"M24.6,18.383l0.584-4.527H20.7V10.965c0-1.311.364-2.205,2.244-2.205h2.4V4.709a32.181,32.181,0,0,0-3.492-.178c-3.457,0-5.824,2.109-5.824,5.984v3.34H12.115v4.527h3.908V30H20.7V18.383h3.9Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"https://www.instagram.com/bankofamerica/\" target=\"_blank\" id=\"social_follow_instagram_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><path d=\"M26.539,12.69H23.927a9.23,9.23,0,1,1-17.854,0H3.461v12.7a1.154,1.154,0,0,0,1.154,1.152H25.384a1.154,1.154,0,0,0,1.155-1.152V12.69Zm0-8.075a1.153,1.153,0,0,0-1.155-1.153H21.923A1.153,1.153,0,0,0,20.77,4.614V8.076A1.154,1.154,0,0,0,21.923,9.23h3.461a1.154,1.154,0,0,0,1.155-1.153V4.614ZM15,9.23A5.77,5.77,0,1,0,20.77,15,5.769,5.769,0,0,0,15,9.23M26.539,30H3.461A3.462,3.462,0,0,1,0,26.537V3.461A3.461,3.461,0,0,1,3.461,0H26.539A3.461,3.461,0,0,1,30,3.461V26.537A3.462,3.462,0,0,1,26.539,30\" fill=\"#fff\" fillRule=\"evenodd\"></path></svg>\n                        </a>\n                        <a href=\"https://www.linkedin.com/company/bank-of-america\" target=\"_blank\" id=\"social_follow_linkedin_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.001\" height=\"30\" viewBox=\"0 0 30.001 30\"><g><path d=\"M27.781,0H2.215A2.188,2.188,0,0,0,0,2.16V27.836A2.191,2.191,0,0,0,2.215,30H27.781A2.2,2.2,0,0,0,30,27.836V2.16A2.192,2.192,0,0,0,27.781,0Z\" fill=\"#fff\"></path><path d=\"M4.448,11.246H8.9V25.563H4.448V11.246ZM6.674,4.129a2.58,2.58,0,1,1-2.58,2.58,2.58,2.58,0,0,1,2.58-2.58\" fill=\"#012169\"></path><path d=\"M11.689,11.246h4.268V13.2h0.06a4.681,4.681,0,0,1,4.21-2.311c4.506,0,5.338,2.965,5.338,6.82v7.852H21.118V18.6c0-1.658-.031-3.795-2.314-3.795-2.314,0-2.669,1.809-2.669,3.676v7.082H11.689V11.246Z\" fill=\"#012169\"></path></g></svg>\n                        </a>\n                        <a href=\"https://twitter.com/BankofAmerica\" target=\"_blank\" id=\"social_follow_twitter_link\" className=\"social-network\">\n                            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.914\" height=\"30\" viewBox=\"0 0 36.914 30\"><path d=\"M36.914,3.551a15.169,15.169,0,0,1-4.35,1.193A7.6,7.6,0,0,0,35.9.553a15.187,15.187,0,0,1-4.811,1.838A7.582,7.582,0,0,0,18.18,9.3,21.5,21.5,0,0,1,2.57,1.387,7.579,7.579,0,0,0,4.914,11.5a7.542,7.542,0,0,1-3.432-.946v0.095A7.577,7.577,0,0,0,7.559,18.07a7.621,7.621,0,0,1-3.422.131,7.587,7.587,0,0,0,7.076,5.26,15.194,15.194,0,0,1-9.4,3.241A15.57,15.57,0,0,1,0,26.6,21.439,21.439,0,0,0,11.609,30c13.93,0,21.549-11.541,21.549-21.549q0-.492-0.023-0.981A15.394,15.394,0,0,0,36.914,3.551Z\" fill=\"#fff\"></path></svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer-copyright\">\n                <p className=\"legal-text\">Bad Bank of America, N.A. {memberFDIC}</p>\n                <p className=\"legal-text\">©&nbsp;<span id=\"dynamic-copyright-year-update\">2021</span>&nbsp;Bad Bank of America Corporation. <span>{rightsReserved}</span></p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Footer;","import '../styles/OptionsNav.css';\nimport { useContext } from 'react';\nimport FormContext from '../helpers/FormContext';\nimport ReactTooltip from 'react-tooltip';\n\nfunction OptionsNav() {\n\n  const { form, setNewForm } = useContext(FormContext);\n\n  const handleChange = (e) => {\n    let selectedValue = e.target.value;\n    if (form !== selectedValue) { setNewForm(selectedValue) }\n  }\n\n    return (\n      <div className=\"black-ribbon\">\n        <div className=\"option-nav-element\">\n          <div style={{display: \"flex\", alignItems:\"center\"}}>\n            <div className=\"left-caret\"></div><div><a className=\"option-link\" href=\"https://jayeclark.github.io\">Return to jayeclark.github.io</a></div>\n          </div>\n        </div>\n        <div className=\"option-nav-element hideable\" style={{flexShrink:1, flexGrow: 1, width: '100%', border:'1px solid transparent'}}></div>\n        <div className=\"option-nav-element form-provider-toggle right-justify\" style={{zIndex: '99999'}}>\n          <div style={{whiteSpace: \"nowrap\", fontSize: \"0.8rem\", padding: '5px', fontWeight: 'bold'}}>Form library: </div>\n            <select id=\"form-select\" className=\"form-select\" onChange={handleChange}  data-for=\"form-toggle-tip\"  data-iscapture=\"true\" data-tip=\"Select form library. (Resets any in-progress form.)\">\n              <option value=\"formik\">Formik</option>\n              <option value=\"reactHook\">React Hook Form</option>\n              <option value=\"reactFinal\">React Final Form</option>\n            </select>\n            <ReactTooltip id=\"form-toggle-tip\" key=\"1\" place=\"bottom\" type=\"dark\" effect=\"solid\" multiline={true} />\n        </div>\n      </div>\n    )\n}\nexport default OptionsNav","import './styles/App.css';\nimport './styles/bootstrap.min.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport Home from './pages/Home.js';\nimport CreateAccount from './pages/CreateAccount.js';\nimport Deposit from './pages/Deposit';\nimport Withdraw from './pages/Withdraw';\nimport Transactions from './pages/Transactions';\nimport AllData from './pages/AllData';\nimport AppNav from './components/AppNav';\nimport logo from './assets/logo.svg';\nimport LanguageContext from './helpers/LanguageContext';\nimport FormContext from './helpers/FormContext';\nimport UserContext from './helpers/UserContext';\nimport UserDBContext from './helpers/UserDBContext';\nimport UserLogin from './components/UserLogin';\nimport Footer from './components/Footer';\nimport OptionsNav from './components/OptionsNav';\n\nfunction App() {\n\n  const [loggedInUser, setLoggedInUser] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [users, setUsers] = useState([]);\n\n  const [form, setForm] = useState('formik');\n\n  function setNewForm(val) {\n    setForm(val);\n  }\n\n  function addUser(user) {\n    let currentUsers = [...users];\n    currentUsers.push(user);\n    setUsers(currentUsers);\n  }\n\n  function logOut() {\n    setLoggedInUser('');\n  }\n  function logIn(val) {\n    setLoggedInUser(val);\n  }\n  \n  function changeLanguage(lan) {\n    setLanguage(lan);\n  }\n\n  return (\n    <>\n    <HashRouter>\n    <UserDBContext.Provider value={{users, addUser}}>\n    <UserContext.Provider value={{ loggedInUser, logOut, logIn }}>\n        <LanguageContext.Provider value={{ language, changeLanguage }}>\n          <FormContext.Provider value={{ form, setNewForm }}>\n            <OptionsNav></OptionsNav>\n              <div className=\"App\">\n              \n                  <div className=\"brand-div\"><img alt=\"\" src={logo} className=\"brand-image\"/></div>\n                  <div className=\"login-widget\">{users.length > 0 ? <UserLogin loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser}></UserLogin> : null}</div>\n                  <AppNav />\n                  <div className=\"container\" style={{padding:'20px'}}>\n                  \n                    <Route path=\"/\" exact component={Home}></Route>\n                    <Route path=\"/create-account/\" exact component={CreateAccount}></Route>\n                    <Route path=\"/deposit/\" exact component={Deposit}></Route>\n                    <Route path=\"/withdraw/\" exact component={Withdraw}></Route>\n                    <Route path=\"/transactions/\" exact component={Transactions}></Route>\n                    <Route path=\"/all-data/\" exact component={AllData}></Route>\n\n                  </div>\n                  <Footer></Footer>\n                \n              </div>\n            </FormContext.Provider>\n          </LanguageContext.Provider>\n          </UserContext.Provider>\n      </UserDBContext.Provider>\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}